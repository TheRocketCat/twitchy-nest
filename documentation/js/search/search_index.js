var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.731,1,1.94]],["body/controllers/AppController.html",[0,2.882,1,3.23,2,2.378,3,0.363,4,0.496,5,0.428,6,3.505,7,0.978,8,0.036,9,1.934,10,2.79,11,3.505,12,0.496,13,0.146,14,2.139,15,3.505,16,0.025,17,0.03,18,0.025]],["title/modules/AppModule.html",[19,1.731,20,1.94]],["body/modules/AppModule.html",[1,3.119,2,2.486,3,0.379,4,0.393,5,0.339,7,1.044,8,0.036,9,1.532,10,2.843,11,2.776,12,0.393,13,0.116,16,0.02,17,0.026,18,0.02,19,2.783,20,3.667,21,1.883,22,1.883,23,2.395,24,2.395,25,1.883,26,3.54,27,2.395,28,2.776,29,2.776,30,2.776,31,3.161,32,3.162,33,2.395,34,2.395,35,3.354,36,3.665,37,3.354,38,1.264,39,3.354,40,2.776,41,1.883,42,3.354,43,3.354]],["title/injectables/AppService.html",[10,1.557,44,1.731]],["body/injectables/AppService.html",[3,0.383,4,0.523,5,0.451,7,0.85,8,0.035,9,2.039,10,2.676,12,0.523,13,0.154,16,0.026,17,0.031,18,0.026,44,2.975,45,3.189,46,3.696]],["title/classes/CmdHandler.html",[13,0.106,47,2.202]],["body/classes/CmdHandler.html",[3,0.29,4,0.268,5,0.231,7,0.905,8,0.036,12,0.268,13,0.079,14,1.153,16,0.024,17,0.02,18,0.024,38,0.861,47,2.415,48,0.59,49,1.258,50,3.334,51,1.89,52,0.483,53,1.16,54,2.261,55,4.029,56,1.043,57,2.284,58,2.5,59,0.873,60,2.284,61,1.056,62,0.961,63,0.644,64,1.056,65,2.415,66,2.284,67,1.555,68,2.97,69,4.755,70,4.029,71,2.876,72,2.284,73,1.275,74,0.713,75,1.545,76,1.153,77,1.282,78,1.631,79,1.282,80,1.153,81,1.043,82,3.394,83,1.437,84,2.284,85,1.518,86,3.383,87,3.383,88,1.282,89,1.437,90,1.89,91,4.029,92,2.261,93,2.284,94,2.284,95,2.799,96,2.284,97,4.378,98,1.89,99,5.291,100,2.284,101,5.291,102,2.284,103,2.284,104,1.89,105,2.284,106,2.284,107,2.284,108,2.284,109,2.284,110,2.284,111,1.437,112,2.284,113,2.284,114,2.284,115,2.284,116,2.284,117,1.89,118,2.284,119,2.284,120,2.284,121,2.284,122,2.284,123,3.383,124,1.056,125,1.282,126,2.284,127,1.043,128,2.284]],["title/classes/CreateInfoCommandDto.html",[13,0.106,129,1.162]],["body/classes/CreateInfoCommandDto.html",[3,0.51,4,0.28,5,0.242,7,0.788,8,0.036,12,0.28,13,0.143,16,0.021,17,0.021,18,0.021,48,0.618,52,0.506,53,1.201,54,2.324,56,1.093,59,1.251,61,1.093,62,0.995,63,0.923,64,1.093,67,1.899,73,1.97,74,0.747,75,1.599,79,1.343,80,1.208,81,1.093,85,1.319,88,1.343,111,1.506,124,1.093,129,1.319,130,1.438,131,3.185,132,1.506,133,2.499,134,3.162,135,3.425,136,4.139,137,3.501,138,2.393,139,2.324,140,5.229,141,2.393,142,2.393,143,2.393,144,2.393,145,2.393,146,2.202,147,1.709,148,1.709,149,2.393,150,2.393,151,2.393,152,1.709,153,1.093,154,2.393,155,1.709,156,1.709,157,2.393,158,1.709,159,1.709]],["title/interfaces/IClient.html",[160,1.731,161,2.202]],["body/interfaces/IClient.html",[3,0.308,4,0.421,5,0.363,8,0.035,12,0.421,16,0.021,17,0.027,18,0.021,49,1.601,52,0.76,53,1.589,59,1.196,61,1.447,62,1.317,63,0.882,64,1.447,67,1.906,73,1.354,74,1.447,75,2.473,160,2.018,161,3.308,162,2.566,163,2.975,164,4.633,165,4.633,166,4.097,167,3.595,168,4.633,169,3.595,170,2.018]],["title/interfaces/IToString.html",[83,1.94,160,1.731]],["body/interfaces/IToString.html",[3,0.365,4,0.498,5,0.43,8,0.035,12,0.498,16,0.025,17,0.03,18,0.025,49,1.608,52,0.9,53,1.766,59,1.099,67,1.608,74,1.329,83,3.239,160,2.389,162,3.038,171,3.522,172,5.752,173,4.256]],["title/classes/InfoCommand.html",[13,0.106,174,1.408]],["body/classes/InfoCommand.html",[3,0.39,4,0.534,5,0.46,8,0.033,12,0.534,13,0.157,16,0.027,17,0.031,18,0.027,48,1.176,130,1.295,174,2.449,175,3.771,176,3.771]],["title/classes/InfoCommand-1.html",[13,0.089,174,1.181,177,2.14]],["body/classes/InfoCommand-1.html",[3,0.438,4,0.364,5,0.314,7,0.802,8,0.036,12,0.599,13,0.107,16,0.018,17,0.025,18,0.018,41,1.746,48,0.803,52,0.658,59,1.233,63,0.974,67,1.721,73,1.799,85,1.587,130,1.454,133,3.007,134,2.68,139,2.68,174,2.18,178,3.219,179,1.957,180,4.774,181,3.093,182,3.111,183,3.111,184,3.111,185,5.116,186,3.485,187,3.111,188,4.212,189,2.575,190,2.221,191,2.221,192,3.951,193,1.957,194,2.575,195,2.575,196,3.111]],["title/controllers/InfoCommandController.html",[0,1.731,197,1.94]],["body/controllers/InfoCommandController.html",[0,1.435,2,1.435,3,0.426,4,0.299,5,0.258,7,0.894,8,0.037,9,1.167,12,0.299,13,0.088,14,1.291,15,2.115,16,0.015,17,0.022,18,0.015,38,1.874,52,0.541,53,1.259,59,1.213,61,1.342,62,1.221,63,0.818,64,1.342,67,1.617,74,1.467,82,2.621,124,1.467,129,1.951,130,1.413,139,2.637,197,2.31,198,2.115,199,2.556,200,1.677,201,3.887,202,3.039,203,3.068,204,2.115,205,4.297,206,2.556,207,2.556,208,2.115,209,3.672,210,2.556,211,3.887,212,2.115,213,3.064,214,3.672,215,2.556,216,3.672,217,2.556,218,2.115,219,2.556,220,1.619,221,1.435,222,2.115,223,1.854,224,2.115,225,2.556,226,2.556,227,2.556,228,2.556,229,2.556,230,2.556,231,2.556,232,2.556,233,2.556]],["title/modules/InfoCommandModule.html",[19,1.731,31,1.731]],["body/modules/InfoCommandModule.html",[2,2.432,3,0.418,4,0.38,5,0.328,7,1.033,8,0.037,9,1.482,12,0.38,13,0.112,16,0.019,17,0.025,18,0.019,19,2.738,21,1.822,22,1.822,23,2.317,24,2.317,25,1.822,26,3.482,27,2.317,31,3.132,32,3.093,33,2.317,34,2.317,36,2.686,38,1.223,40,2.686,41,1.822,62,0.922,130,0.922,174,1.482,186,2.686,193,2.726,197,3.068,220,2.102,221,1.822,234,2.686,235,2.686,236,3.246,237,3.246,238,2.686,239,2.686,240,3.246,241,3.246,242,3.246,243,3.246,244,3.246]],["title/injectables/InfoCommandService.html",[44,1.731,220,1.162]],["body/injectables/InfoCommandService.html",[3,0.378,4,0.262,5,0.226,7,0.975,8,0.037,9,1.022,12,0.262,13,0.077,16,0.013,17,0.02,18,0.013,38,1.929,41,1.257,44,1.871,45,1.599,52,0.474,53,1.143,54,2.774,56,1.522,59,1.276,61,1.472,62,1.34,63,0.898,64,1.472,67,1.243,74,1.543,75,1.522,124,1.543,129,1.862,130,1.455,174,2.014,189,3.649,190,1.599,191,1.599,195,2.758,200,1.818,201,3.649,202,2.758,203,2.379,204,1.853,208,2.758,211,3.649,212,2.758,213,2.873,220,1.256,222,1.853,223,2.01,224,1.853,238,1.853,239,1.853,245,1.853,246,3.333,247,2.239,248,2.239,249,2.239,250,2.239,251,3.333,252,2.381,253,2.239,254,4.942,255,2.239,256,2.239,257,2.239,258,2.239,259,2.239,260,1.853,261,2.239,262,2.239,263,2.239,264,3.981,265,2.239,266,2.239]],["title/classes/ReadInfoCommandDto.html",[13,0.106,252,1.557]],["body/classes/ReadInfoCommandDto.html",[3,0.487,4,0.482,5,0.416,7,0.961,8,0.036,12,0.482,13,0.142,16,0.024,17,0.03,18,0.024,48,1.064,85,1.552,129,1.552,130,1.171,132,2.592,200,1.881,223,2.08,252,2.549,267,2.592,268,4.177,269,4.12,270,2.941,271,2.941,272,2.592,273,4.12]],["title/classes/TSC.html",[13,0.106,274,2.202]],["body/classes/TSC.html",[3,0.366,4,0.372,5,0.321,7,0.605,8,0.037,12,0.372,13,0.11,16,0.019,17,0.025,18,0.019,48,0.82,49,1.611,52,0.672,53,1.465,59,1.246,63,0.605,74,0.992,76,1.604,85,1.197,124,0.992,133,3.05,135,4.688,153,1.451,170,1.783,181,1.783,260,3.993,274,3.05,275,2.268,276,4.826,277,5.16,278,4.271,279,4.826,280,4.826,281,3.177,282,3.177,283,2.629,284,3.177,285,3.177,286,3.177,287,2.268,288,2.629,289,2.629,290,2.629,291,2.629,292,3.535,293,2.629,294,2.629,295,2.268,296,4.826,297,2.268,298,3.177,299,3.177]],["title/classes/TwitchInfoCommand.html",[13,0.106,58,1.731]],["body/classes/TwitchInfoCommand.html",[3,0.422,4,0.195,5,0.169,7,0.91,8,0.037,12,0.195,13,0.114,14,0.842,16,0.022,17,0.016,18,0.016,38,1.553,48,0.431,49,1.179,52,0.353,53,0.911,54,2.765,56,0.762,58,1.491,59,0.854,61,1.034,62,0.94,63,0.63,64,1.034,65,1.191,67,1.663,68,2.989,73,1.735,74,0.829,75,1.511,76,0.842,77,0.936,78,1.191,79,0.936,80,0.842,81,1.723,85,1.801,88,0.936,89,1.049,92,0.936,111,1.671,124,1.493,125,0.936,127,1.723,129,0.628,131,1.049,134,2.584,139,0.936,146,1.049,147,1.191,148,1.191,152,1.191,153,0.762,156,1.191,158,1.191,159,1.191,170,0.936,200,1.723,220,1.422,221,0.936,223,1.341,252,0.842,267,1.049,297,1.191,300,2.374,301,1.049,302,1.668,303,1.668,304,2.198,305,1.668,306,2.313,307,1.668,308,2.198,309,1.668,310,1.049,311,1.491,312,1.38,313,1.38,314,1.049,315,1.191,316,1.38,317,1.38,318,1.38,319,1.38,320,2.198,321,1.896,322,1.38,323,1.38,324,1.38,325,1.38,326,1.38,327,1.38,328,1.38,329,1.38,330,1.38,331,1.38,332,1.38,333,1.38,334,1.38,335,1.38,336,2.198,337,1.38,338,1.049,339,1.191,340,1.38,341,1.38,342,1.38,343,2.198,344,1.38,345,1.38,346,1.38,347,1.38,348,1.38,349,1.38,350,1.191,351,1.38,352,1.191,353,1.38,354,1.049,355,1.38,356,1.38,357,1.191,358,1.38,359,1.191,360,0.936,361,1.38,362,1.38,363,1.38,364,1.38,365,1.38,366,1.38,367,1.38,368,2.694,369,1.38,370,1.38,371,1.38,372,1.38,373,1.38,374,1.38,375,1.38,376,1.671,377,1.191,378,1.671,379,1.38,380,1.38,381,2.198,382,1.191,383,1.38,384,1.38,385,1.671,386,2.198,387,1.38]],["title/classes/TwitchService.html",[13,0.106,388,2.202]],["body/classes/TwitchService.html",[3,0.377,4,0.388,5,0.335,7,0.632,8,0.036,12,0.388,13,0.115,14,1.675,16,0.019,17,0.026,18,0.019,48,0.856,52,0.702,53,1.508,56,1.515,59,1.273,61,1.373,62,1.249,63,0.837,64,1.373,74,1.373,124,1.036,127,1.515,130,1.492,200,2.007,220,2.115,221,1.862,283,3.638,378,3.303,382,2.368,388,3.139,389,2.745,390,3.317,391,3.317,392,4.396,393,3.317,394,4.396,395,3.317,396,4.396,397,3.317,398,3.139,399,3.317,400,3.317,401,3.317,402,3.317,403,3.317,404,2.745,405,2.745,406,3.317]],["title/classes/TwitchTest.html",[13,0.106,376,1.94]],["body/classes/TwitchTest.html",[3,0.424,4,0.198,5,0.171,7,0.914,8,0.037,12,0.198,13,0.115,14,0.853,16,0.026,17,0.016,18,0.016,38,1.432,48,0.436,49,1.042,52,0.357,53,0.921,54,2.328,58,0.949,59,0.693,61,0.838,62,0.763,63,0.511,64,0.838,65,1.206,67,1.709,68,3.131,73,1.744,74,0.838,75,1.225,76,0.853,77,0.949,78,1.206,79,0.949,80,0.853,81,1.736,85,1.809,88,0.949,89,1.063,92,0.949,111,1.688,124,1.5,125,0.949,127,1.736,129,0.637,131,1.063,134,2.328,139,1.506,146,1.063,147,1.206,148,1.206,152,1.206,153,0.772,156,1.206,158,1.206,159,1.206,170,0.949,200,1.225,220,1.011,221,0.949,223,1.355,252,0.853,267,1.063,300,2.1,301,1.063,304,1.398,306,2.478,308,1.398,310,1.063,311,1.506,312,1.398,313,1.398,314,1.063,315,1.206,316,1.398,317,1.398,318,1.398,319,1.398,320,2.221,321,1.916,322,1.398,323,1.398,324,1.398,325,1.398,326,1.398,327,1.398,328,1.398,329,1.398,330,1.398,331,1.398,332,1.398,333,1.398,334,1.398,335,1.398,336,2.221,337,1.398,338,1.063,339,1.206,340,1.398,341,1.398,342,1.398,343,2.221,344,1.398,345,1.398,346,1.398,347,1.398,348,1.398,349,1.398,350,1.206,351,1.398,352,1.206,353,1.398,354,1.063,355,1.398,356,1.398,357,1.206,358,1.398,359,1.206,360,0.949,361,1.398,362,1.398,363,1.398,364,1.398,365,1.398,366,1.398,367,1.398,368,3.428,369,1.398,370,1.398,371,1.398,372,1.398,373,1.398,374,1.398,375,1.398,376,2.1,377,2.383,378,2.391,379,1.398,380,1.398,381,2.221,382,1.206,383,1.398,384,2.221,385,1.688,386,2.221,387,1.398,407,1.69,408,1.69,409,1.69]],["title/classes/UnauthorizedError.html",[13,0.106,311,1.731]],["body/classes/UnauthorizedError.html",[3,0.173,4,0.237,5,0.204,7,0.588,8,0.037,12,0.439,13,0.07,16,0.029,17,0.018,18,0.018,48,0.522,49,0.964,56,1.71,59,0.522,61,0.632,63,0.713,67,1.409,68,3.043,71,1.444,73,1.864,76,1.022,80,1.022,81,0.924,85,1.411,89,1.942,92,1.733,97,1.674,117,3.099,124,1.593,125,1.136,127,2.259,153,1.913,155,1.444,181,1.733,218,2.555,272,1.942,297,2.673,306,1.136,311,2.102,314,1.942,321,1.444,338,1.942,350,1.444,354,1.273,357,2.204,360,2.863,398,1.444,410,1.444,411,2.023,412,2.023,413,2.023,414,1.674,415,2.023,416,2.023,417,2.023,418,2.023,419,2.023,420,2.355,421,1.674,422,2.555,423,1.674,424,3.099,425,1.444,426,1.674,427,1.674,428,1.674,429,1.674,430,2.023,431,2.023,432,2.023,433,2.023,434,2.023,435,3.088,436,3.088,437,3.088,438,2.023,439,3.099,440,3.467,441,3.467,442,4.19,443,4.19,444,2.023,445,2.023,446,2.023,447,2.023,448,1.674,449,2.023,450,2.023,451,2.023,452,2.023,453,1.674,454,2.023,455,2.023,456,2.023,457,3.088,458,2.023,459,3.088,460,2.023,461,2.023,462,1.674,463,1.674,464,1.674,465,1.674,466,1.674]],["title/classes/UpdateInfoCommandDto.html",[13,0.106,213,1.731]],["body/classes/UpdateInfoCommandDto.html",[3,0.472,4,0.494,5,0.426,7,0.975,8,0.035,12,0.494,13,0.146,16,0.025,17,0.03,18,0.025,48,1.088,129,1.589,130,1.198,132,2.652,200,1.925,213,2.874,223,2.129,268,3.489,270,3.01,271,3.01,272,2.652,467,3.489,468,4.216]],["title/classes/WrongAmountOfArgsError.html",[13,0.106,469,2.202]],["body/classes/WrongAmountOfArgsError.html",[3,0.33,4,0.452,5,0.39,8,0.036,12,0.452,13,0.133,16,0.023,17,0.028,18,0.023,48,0.995,49,1.513,56,1.761,59,0.995,61,1.204,62,1.096,63,0.734,64,1.204,67,1.654,166,3.782,272,3.048,360,2.719,462,3.191,463,3.191,465,3.191,469,3.782,470,3.191,471,4.845,472,3.856,473,3.856,474,3.856,475,3.856,476,3.191,477,3.191]],["title/coverage.html",[478,3.464]],["body/coverage.html",[0,1.86,1,1.398,3,0.34,5,0.225,6,1.839,8,0.036,10,1.122,13,0.194,16,0.013,17,0.019,18,0.013,25,1.248,38,1.771,44,1.86,46,1.839,47,1.587,49,1.816,50,1.839,51,1.839,58,1.248,63,0.423,77,1.248,83,1.398,88,3.413,127,2.397,129,0.837,130,1.524,131,1.398,132,2.493,153,1.015,160,1.86,161,1.587,163,1.839,171,1.839,174,1.513,175,1.839,176,1.839,178,2.085,179,2.085,193,1.398,197,1.398,198,1.839,213,1.248,220,0.837,245,1.839,252,1.122,267,1.398,274,1.587,275,2.366,287,1.587,300,2.493,301,2.493,306,1.248,310,1.398,311,1.248,376,1.398,385,1.398,388,1.587,389,1.839,410,2.83,467,1.839,469,1.587,470,1.839,478,1.839,479,1.839,480,2.222,481,2.222,482,5.726,483,2.222,484,2.222,485,2.222,486,3.964,487,3.314,488,1.839,489,3.964,490,2.222,491,2.222,492,4.394,493,1.839,494,2.743,495,1.839,496,1.839,497,1.839,498,1.839,499,2.222,500,2.222]],["title/dependencies.html",[22,2.079,501,2.586]],["body/dependencies.html",[8,0.037,9,1.682,13,0.127,16,0.022,17,0.028,18,0.028,22,2.067,41,2.067,76,1.859,81,1.682,146,2.317,190,2.629,270,2.629,271,2.629,502,5.186,503,3.683,504,3.683,505,3.683,506,4.706,507,3.683,508,4.706,509,3.683,510,3.683,511,3.683,512,3.683,513,3.683,514,3.683,515,3.683,516,3.683,517,3.683,518,3.683,519,3.683,520,3.683,521,3.683,522,3.683,523,3.683,524,3.683,525,3.683,526,3.683,527,3.683,528,3.683]],["title/miscellaneous/functions.html",[420,2.329,529,1.306]],["body/miscellaneous/functions.html",[8,0.035,16,0.03,17,0.025,18,0.018,25,2.685,38,1.176,49,1.671,52,0.66,61,1.723,62,1.521,63,0.594,64,1.671,68,2.37,71,2.229,73,1.176,74,1.6,75,1.426,77,2.37,124,0.975,134,1.753,300,1.964,301,2.656,306,2.685,310,2.656,314,1.964,354,1.964,385,3.009,410,2.229,420,2.656,421,2.584,422,2.584,423,2.584,424,2.584,425,2.229,426,2.584,427,2.584,428,2.584,429,2.584,439,2.584,488,2.584,493,2.584,494,2.584,495,3.493,496,3.493,497,2.584,498,3.493,529,1.576,530,3.122,531,4.222,532,3.122,533,4.222,534,3.122,535,2.229,536,3.122,537,3.122,538,3.122,539,3.122,540,3.122,541,3.122]],["title/index.html",[52,0.547,542,2.586,543,2.586]],["body/index.html",[8,0.035,16,0.01,17,0.015,18,0.024,62,0.467,64,0.513,73,0.619,79,0.923,80,0.83,81,1.497,82,2.34,85,1.41,90,1.36,92,0.923,95,2.172,98,2.172,104,2.712,124,0.82,125,0.923,127,2.09,153,0.75,155,1.874,166,1.874,177,1.36,181,1.474,192,2.172,203,1.173,295,1.173,315,1.874,338,1.034,339,1.173,352,1.874,359,1.173,360,2.296,368,1.874,377,1.173,378,1.651,398,1.173,404,1.36,405,1.36,414,1.36,420,1.651,425,1.173,440,2.172,441,2.172,448,1.36,453,1.36,464,1.36,466,1.36,476,1.36,477,1.36,479,1.36,544,1.644,545,2.625,546,1.644,547,1.644,548,2.625,549,1.644,550,1.644,551,1.644,552,1.644,553,1.644,554,1.644,555,1.644,556,1.644,557,3.277,558,1.644,559,1.644,560,1.644,561,1.644,562,1.644,563,1.644,564,1.644,565,1.644,566,1.644,567,1.644,568,2.625,569,1.644,570,1.644,571,1.644,572,1.644,573,2.625,574,1.644,575,1.644,576,1.644,577,2.625,578,1.644,579,4.091,580,1.644,581,3.277,582,2.625,583,1.644,584,1.644,585,1.644,586,1.644,587,2.625,588,1.644,589,2.625,590,1.644,591,1.644,592,1.644,593,1.644,594,1.644,595,1.644,596,1.644,597,1.644,598,1.644,599,1.644,600,2.625,601,1.644,602,1.644,603,1.644,604,2.625,605,3.277,606,3.277,607,2.625,608,1.644,609,4.361,610,2.625,611,1.644,612,1.644,613,1.644,614,1.644,615,1.644,616,1.644,617,2.625,618,1.644,619,1.644,620,4.091,621,1.644,622,2.625,623,1.644,624,1.644,625,1.644,626,1.644,627,1.36,628,1.644,629,1.644,630,1.644,631,1.644,632,1.644,633,1.644,634,1.644,635,1.644,636,1.644,637,1.644,638,1.644,639,1.644,640,1.644,641,1.644,642,1.644,643,1.644,644,2.625,645,2.625,646,4.361,647,3.742,648,2.625,649,3.742,650,2.625,651,2.625,652,2.625,653,2.625,654,1.644,655,2.625,656,1.644,657,1.644,658,1.644,659,1.644,660,1.644,661,1.644,662,1.644,663,1.644,664,1.644,665,1.644,666,1.644,667,1.644,668,1.644,669,1.644,670,2.625,671,1.644,672,1.644,673,1.644,674,1.644,675,1.644,676,1.644,677,1.644,678,2.625,679,1.644,680,1.644,681,1.644,682,1.644,683,1.644,684,1.644,685,1.644,686,1.644,687,1.644,688,1.644,689,1.644,690,1.644,691,1.644,692,1.644,693,1.644,694,1.644,695,1.644,696,3.277,697,1.644,698,1.644,699,1.644,700,1.644,701,1.644,702,1.644,703,1.644,704,2.625,705,2.625,706,1.644,707,2.625,708,1.644,709,2.625,710,1.644,711,1.644,712,1.644,713,1.644,714,1.644,715,2.625,716,1.644,717,1.644,718,1.644,719,2.625,720,1.644,721,1.644,722,1.644,723,1.644,724,1.644,725,1.644,726,1.644,727,1.644,728,1.644,729,1.644,730,1.644,731,1.644]],["title/modules.html",[21,2.35]],["body/modules.html",[8,0.032,16,0.027,17,0.032,18,0.027,20,2.881,21,2.571,31,2.571,732,5.379,733,5.379,734,5.379,735,5.379]],["title/overview.html",[736,3.464]],["body/overview.html",[2,2.174,8,0.034,10,2.68,16,0.023,17,0.029,18,0.023,19,2.174,20,3.68,21,2.174,22,2.174,23,2.765,24,2.765,25,2.174,26,2.765,27,2.765,28,3.205,29,3.205,30,3.205,31,3.218,32,3.468,33,2.765,34,2.765,45,2.765,48,1,162,2.765,220,2,234,3.205,235,3.205,627,4.606,736,3.205,737,3.872]],["title/miscellaneous/typealiases.html",[529,1.306,738,3.703]],["body/miscellaneous/typealiases.html",[8,0.032,16,0.027,17,0.032,18,0.027,52,0.969,63,0.872,130,1.301,178,2.881,179,3.384,191,3.84,529,2.312,535,3.27,739,4.58]],["title/miscellaneous/variables.html",[529,1.306,740,3.064]],["body/miscellaneous/variables.html",[3,0.338,8,0.036,16,0.023,17,0.029,18,0.023,49,1.23,52,0.833,63,0.75,130,1.12,170,2.212,178,2.479,179,3.089,181,2.212,193,3.089,194,3.26,275,2.813,287,3.506,288,3.26,289,3.26,290,3.26,291,3.26,292,4.064,293,3.26,294,3.26,295,2.813,529,1.989,535,2.813,740,3.26,741,3.94,742,4.911,743,4.911,744,3.94]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":88,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["0.1.13",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":177,"title":{"classes/InfoCommand-1.html":{}},"body":{"index.html":{}}}],["1.7.5",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":583,"title":{},"body":{"index.html":{}}}],["100",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["10anything",{"_index":584,"title":{},"body":{"index.html":{}}}],["12",{"_index":737,"title":{},"body":{"overview.html":{}}}],["17.4.0",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":627,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3",{"_index":623,"title":{},"body":{"index.html":{}}}],["3.0.2",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["4.7.16",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["7.6.14",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["9000x",{"_index":560,"title":{},"body":{"index.html":{}}}],["_client",{"_index":276,"title":{},"body":{"classes/TSC.html":{}}}],["accessors",{"_index":278,"title":{},"body":{"classes/TSC.html":{}}}],["action",{"_index":264,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["aliases",{"_index":739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":654,"title":{},"body":{"index.html":{}}}],["always",{"_index":417,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["annoyance",{"_index":437,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["app.controller",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":20,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":92,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["args=extractcommandargs(\"!createinfocmd",{"_index":369,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["arguments",{"_index":476,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{},"index.html":{}}}],["ass",{"_index":668,"title":{},"body":{"index.html":{}}}],["assumes",{"_index":416,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["async",{"_index":54,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["atm",{"_index":423,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["auth",{"_index":312,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["authority",{"_index":397,"title":{},"body":{"classes/TwitchService.html":{}}}],["authorized",{"_index":466,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["auto",{"_index":693,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":677,"title":{},"body":{"index.html":{}}}],["await",{"_index":111,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["back",{"_index":404,"title":{},"body":{"classes/TwitchService.html":{},"index.html":{}}}],["badfunc():number",{"_index":621,"title":{},"body":{"index.html":{}}}],["balance",{"_index":106,"title":{},"body":{"classes/CmdHandler.html":{}}}],["best",{"_index":602,"title":{},"body":{"index.html":{}}}],["bin",{"_index":367,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["boolean",{"_index":71,"title":{},"body":{"classes/CmdHandler.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boring",{"_index":634,"title":{},"body":{"index.html":{}}}],["bot",{"_index":546,"title":{},"body":{"index.html":{}}}],["bot/auth.ts",{"_index":410,"title":{},"body":{"classes/UnauthorizedError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot/auth.ts:70",{"_index":411,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["bot/cmd",{"_index":50,"title":{},"body":{"classes/CmdHandler.html":{},"coverage.html":{}}}],["bot/info",{"_index":300,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot/shared/errors.ts",{"_index":470,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{},"coverage.html":{}}}],["bot/shared/errors.ts:1",{"_index":472,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{}}}],["bot/shared/interfaces/client.ts",{"_index":163,"title":{},"body":{"interfaces/IClient.html":{},"coverage.html":{}}}],["bot/shared/interfaces/client.ts:2",{"_index":167,"title":{},"body":{"interfaces/IClient.html":{}}}],["bot/shared/interfaces/client.ts:3",{"_index":169,"title":{},"body":{"interfaces/IClient.html":{}}}],["bot/shared/interfaces/string.ts",{"_index":171,"title":{},"body":{"interfaces/IToString.html":{},"coverage.html":{}}}],["bot/shared/interfaces/string.ts:2",{"_index":173,"title":{},"body":{"interfaces/IToString.html":{}}}],["bot/shared/twitchclientsingleton.ts",{"_index":275,"title":{},"body":{"classes/TSC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bot/shared/twitchclientsingleton.ts:13",{"_index":281,"title":{},"body":{"classes/TSC.html":{}}}],["bot/shared/twitchclientsingleton.ts:15",{"_index":282,"title":{},"body":{"classes/TSC.html":{}}}],["bot/shared/twitchclientsingleton.ts:22",{"_index":285,"title":{},"body":{"classes/TSC.html":{}}}],["bot/shared/utilities/args.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot/shared/utilities/http.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot/shared/utilities/time.ts",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":101,"title":{},"body":{"classes/CmdHandler.html":{}}}],["browse",{"_index":735,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":732,"title":{},"body":{"modules.html":{}}}],["case",{"_index":97,"title":{},"body":{"classes/CmdHandler.html":{},"classes/UnauthorizedError.html":{}}}],["catch",{"_index":321,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{}}}],["chain",{"_index":673,"title":{},"body":{"index.html":{}}}],["chaining",{"_index":670,"title":{},"body":{"index.html":{}}}],["channel",{"_index":73,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"classes/InfoCommand-1.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["channels",{"_index":295,"title":{},"body":{"classes/TSC.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":571,"title":{},"body":{"index.html":{}}}],["chat",{"_index":405,"title":{},"body":{"classes/TwitchService.html":{},"index.html":{}}}],["check",{"_index":117,"title":{},"body":{"classes/CmdHandler.html":{},"classes/UnauthorizedError.html":{}}}],["checked",{"_index":337,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["class",{"_index":13,"title":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":48,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"overview.html":{}}}],["client",{"_index":279,"title":{},"body":{"classes/TSC.html":{}}}],["client.whisper(userstate.username,\"no",{"_index":122,"title":{},"body":{"classes/CmdHandler.html":{}}}],["cluster_appmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_infocommandmodule",{"_index":234,"title":{},"body":{"modules/InfoCommandModule.html":{},"overview.html":{}}}],["cluster_infocommandmodule_providers",{"_index":235,"title":{},"body":{"modules/InfoCommandModule.html":{},"overview.html":{}}}],["cmd",{"_index":134,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand-1.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"miscellaneous/functions.html":{}}}],["cmdhandler",{"_index":47,"title":{"classes/CmdHandler.html":{}},"body":{"classes/CmdHandler.html":{},"coverage.html":{}}}],["cmdres:result",{"_index":705,"title":{},"body":{"index.html":{}}}],["cmdresult",{"_index":91,"title":{},"body":{"classes/CmdHandler.html":{}}}],["cmdresult=await",{"_index":99,"title":{},"body":{"classes/CmdHandler.html":{}}}],["code",{"_index":352,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["coin",{"_index":595,"title":{},"body":{"index.html":{}}}],["coincount",{"_index":102,"title":{},"body":{"classes/CmdHandler.html":{}}}],["coinprice",{"_index":104,"title":{},"body":{"classes/CmdHandler.html":{},"index.html":{}}}],["coins",{"_index":548,"title":{},"body":{"index.html":{}}}],["command",{"_index":82,"title":{},"body":{"classes/CmdHandler.html":{},"controllers/InfoCommandController.html":{},"index.html":{}}}],["command.controller",{"_index":237,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["command.controller.ts",{"_index":198,"title":{},"body":{"controllers/InfoCommandController.html":{},"coverage.html":{}}}],["command.controller.ts:19",{"_index":206,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["command.controller.ts:25",{"_index":207,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["command.controller.ts:30",{"_index":215,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["command.controller.ts:38",{"_index":210,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["command.dto",{"_index":223,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UpdateInfoCommandDto.html":{}}}],["command.dto.ts",{"_index":132,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/ReadInfoCommandDto.html":{},"classes/UpdateInfoCommandDto.html":{},"coverage.html":{}}}],["command.dto.ts:11",{"_index":145,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["command.dto.ts:24",{"_index":141,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["command.dto.ts:27",{"_index":142,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["command.dto.ts:30",{"_index":143,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["command.dto.ts:5",{"_index":138,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["command.entity.ts",{"_index":176,"title":{},"body":{"classes/InfoCommand.html":{},"coverage.html":{}}}],["command.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["command.module.ts",{"_index":236,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["command.schema",{"_index":239,"title":{},"body":{"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{}}}],["command.schema.ts",{"_index":179,"title":{},"body":{"classes/InfoCommand-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["command.schema.ts:12",{"_index":183,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["command.schema.ts:15",{"_index":184,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["command.schema.ts:9",{"_index":182,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["command.service",{"_index":221,"title":{},"body":{"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{}}}],["command.service.ts",{"_index":245,"title":{},"body":{"injectables/InfoCommandService.html":{},"coverage.html":{}}}],["command.service.ts:10",{"_index":248,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.service.ts:16",{"_index":249,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.service.ts:22",{"_index":253,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.service.ts:27",{"_index":250,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.service.ts:31",{"_index":256,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.service.ts:35",{"_index":255,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["command.ts",{"_index":301,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["command.ts:106",{"_index":409,"title":{},"body":{"classes/TwitchTest.html":{}}}],["command.ts:12",{"_index":303,"title":{},"body":{"classes/TwitchInfoCommand.html":{}}}],["command.ts:20",{"_index":307,"title":{},"body":{"classes/TwitchInfoCommand.html":{}}}],["command.ts:40",{"_index":309,"title":{},"body":{"classes/TwitchInfoCommand.html":{}}}],["command.ts:92",{"_index":408,"title":{},"body":{"classes/TwitchTest.html":{}}}],["command/dto/create",{"_index":131,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["command/dto/read",{"_index":267,"title":{},"body":{"classes/ReadInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["command/dto/update",{"_index":467,"title":{},"body":{"classes/UpdateInfoCommandDto.html":{},"coverage.html":{}}}],["command/entities/info",{"_index":175,"title":{},"body":{"classes/InfoCommand.html":{},"coverage.html":{}}}],["command/info",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/CmdHandler.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["command/schemas/info",{"_index":178,"title":{},"body":{"classes/InfoCommand-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["command/twitch/twitch.service.ts",{"_index":389,"title":{},"body":{"classes/TwitchService.html":{},"coverage.html":{}}}],["command/twitch/twitch.service.ts:10",{"_index":393,"title":{},"body":{"classes/TwitchService.html":{}}}],["command/twitch/twitch.service.ts:3",{"_index":391,"title":{},"body":{"classes/TwitchService.html":{}}}],["command/twitch/twitch.service.ts:6",{"_index":395,"title":{},"body":{"classes/TwitchService.html":{}}}],["commandname",{"_index":87,"title":{},"body":{"classes/CmdHandler.html":{}}}],["commands",{"_index":95,"title":{},"body":{"classes/CmdHandler.html":{},"index.html":{}}}],["comparing",{"_index":710,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":359,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["console.log(\"property",{"_index":345,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log('channel",{"_index":379,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log('executed",{"_index":227,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["console.log('userstate",{"_index":380,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log('x",{"_index":381,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log('y",{"_index":382,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{}}}],["console.log(object.getownpropertydescriptors(dto",{"_index":334,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log(object.getownpropertydescriptors(dtoclass",{"_index":333,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log(object.getownpropertynames(dto",{"_index":331,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log(object.keys(dto",{"_index":332,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log(val.channel",{"_index":374,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["console.log(val.cmd",{"_index":375,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["const",{"_index":85,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand-1.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["constructor(channel",{"_index":137,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["constructor(ics",{"_index":302,"title":{},"body":{"classes/TwitchInfoCommand.html":{}}}],["constructor(infocommandmodel",{"_index":247,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["constructor(infocommandservice",{"_index":390,"title":{},"body":{"classes/TwitchService.html":{}}}],["constructor(message",{"_index":471,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/CmdHandler.html":{},"controllers/InfoCommandController.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{}}}],["constructor(tic",{"_index":57,"title":{},"body":{"classes/CmdHandler.html":{}}}],["continue",{"_index":347,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["contributing",{"_index":598,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/InfoCommandController.html":{}},"body":{"controllers/AppController.html":{},"controllers/InfoCommandController.html":{},"coverage.html":{}}}],["controller('info",{"_index":225,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["convention",{"_index":660,"title":{},"body":{"index.html":{}}}],["conventions",{"_index":599,"title":{},"body":{"index.html":{}}}],["coolest",{"_index":545,"title":{},"body":{"index.html":{}}}],["correctstatus",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["correctstatus(r",{"_index":536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":400,"title":{},"body":{"classes/TwitchService.html":{}}}],["coverage",{"_index":478,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":200,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UpdateInfoCommandDto.html":{}}}],["create(@body",{"_index":226,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["create(channel",{"_index":305,"title":{},"body":{"classes/TwitchInfoCommand.html":{}}}],["create(createinfocommanddto",{"_index":204,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["create(data",{"_index":392,"title":{},"body":{"classes/TwitchService.html":{}}}],["createandvalidate",{"_index":136,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["createandvalidate(channel",{"_index":144,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["createautomsg",{"_index":98,"title":{},"body":{"classes/CmdHandler.html":{},"index.html":{}}}],["createinfocmd",{"_index":110,"title":{},"body":{"classes/CmdHandler.html":{}}}],["createinfocommanddto",{"_index":129,"title":{"classes/CreateInfoCommandDto.html":{}},"body":{"classes/CreateInfoCommandDto.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UpdateInfoCommandDto.html":{},"coverage.html":{}}}],["createinfocommanddto(channel",{"_index":154,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["createinfocommanddto.createandvalidate(channel",{"_index":317,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["createnewautomsghandler(channel,userstate,msg",{"_index":100,"title":{},"body":{"classes/CmdHandler.html":{}}}],["creator",{"_index":547,"title":{},"body":{"index.html":{}}}],["cult",{"_index":558,"title":{},"body":{"index.html":{}}}],["custom",{"_index":118,"title":{},"body":{"classes/CmdHandler.html":{}}}],["cycle",{"_index":580,"title":{},"body":{"index.html":{}}}],["darockecat",{"_index":292,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":394,"title":{},"body":{"classes/TwitchService.html":{}}}],["dead",{"_index":658,"title":{},"body":{"index.html":{}}}],["death",{"_index":568,"title":{},"body":{"index.html":{}}}],["debug",{"_index":289,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["decorator",{"_index":422,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":139,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["default",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defeand",{"_index":601,"title":{},"body":{"index.html":{}}}],["defined",{"_index":59,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["delete",{"_index":219,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["delete(':id",{"_index":209,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["deleteinfocmd",{"_index":115,"title":{},"body":{"classes/CmdHandler.html":{}}}],["deleteinfocommandhandler(channel,userstate",{"_index":116,"title":{},"body":{"classes/CmdHandler.html":{}}}],["dependencies",{"_index":22,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":644,"title":{},"body":{"index.html":{}}}],["description",{"_index":550,"title":{},"body":{"index.html":{}}}],["descriptor",{"_index":432,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["descriptor.value",{"_index":435,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["development",{"_index":718,"title":{},"body":{"index.html":{}}}],["didnt",{"_index":453,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["different",{"_index":592,"title":{},"body":{"index.html":{}}}],["document",{"_index":188,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["documentation",{"_index":479,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesnt",{"_index":350,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{}}}],["dont",{"_index":620,"title":{},"body":{"index.html":{}}}],["dope",{"_index":635,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["double",{"_index":576,"title":{},"body":{"index.html":{}}}],["dto",{"_index":152,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dto.channel=channel",{"_index":340,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dto/create",{"_index":222,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["dto/read",{"_index":257,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["dto/update",{"_index":224,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["dto=new",{"_index":329,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dto[p]=args[i",{"_index":348,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dtoclass",{"_index":330,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dtoclass:t,args:any[],channel?:string",{"_index":328,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["dubble",{"_index":412,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["dumb",{"_index":625,"title":{},"body":{"index.html":{}}}],["e",{"_index":322,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["easier",{"_index":728,"title":{},"body":{"index.html":{}}}],["editing",{"_index":656,"title":{},"body":{"index.html":{}}}],["eg",{"_index":585,"title":{},"body":{"index.html":{}}}],["emits",{"_index":401,"title":{},"body":{"classes/TwitchService.html":{}}}],["end",{"_index":649,"title":{},"body":{"index.html":{}}}],["enforcing",{"_index":426,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["err",{"_index":80,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["err(e",{"_index":323,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["err(errors",{"_index":158,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["err(new",{"_index":125,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["errimpl",{"_index":708,"title":{},"body":{"index.html":{}}}],["error",{"_index":360,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{},"index.html":{}}}],["error(\"im",{"_index":624,"title":{},"body":{"index.html":{}}}],["error(\"no",{"_index":126,"title":{},"body":{"classes/CmdHandler.html":{}}}],["error(\"smarty",{"_index":629,"title":{},"body":{"index.html":{}}}],["errors",{"_index":155,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["errors.length",{"_index":157,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["errors=await",{"_index":355,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["etc",{"_index":594,"title":{},"body":{"index.html":{}}}],["even",{"_index":566,"title":{},"body":{"index.html":{}}}],["event",{"_index":402,"title":{},"body":{"classes/TwitchService.html":{}}}],["everything",{"_index":590,"title":{},"body":{"index.html":{}}}],["example",{"_index":579,"title":{},"body":{"index.html":{}}}],["examples",{"_index":726,"title":{},"body":{"index.html":{}}}],["executecmd",{"_index":55,"title":{},"body":{"classes/CmdHandler.html":{}}}],["executecmd(channel",{"_index":66,"title":{},"body":{"classes/CmdHandler.html":{}}}],["executes",{"_index":399,"title":{},"body":{"classes/TwitchService.html":{}}}],["expect(cmdres).tobe(ok.empty",{"_index":706,"title":{},"body":{"index.html":{}}}],["expect(cmdres.ok).tobe(true)it",{"_index":713,"title":{},"body":{"index.html":{}}}],["expected",{"_index":714,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["exports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["exports:[infocommandmodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["exports:[infocommandservice,infocommandcontroller",{"_index":244,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["express",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":272,"title":{},"body":{"classes/ReadInfoCommandDto.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["extractcommandargs",{"_index":77,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractcommandargs(cmd",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcommandargs(msg).expect('parsing",{"_index":93,"title":{},"body":{"classes/CmdHandler.html":{}}}],["false",{"_index":315,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["fans",{"_index":549,"title":{},"body":{"index.html":{}}}],["faster",{"_index":655,"title":{},"body":{"index.html":{}}}],["fastify",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["feacies",{"_index":638,"title":{},"body":{"index.html":{}}}],["feature",{"_index":562,"title":{},"body":{"index.html":{}}}],["fetchjson",{"_index":496,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetchjson(url",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{}}}],["findall",{"_index":201,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["fine",{"_index":362,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["first",{"_index":456,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["follow",{"_index":572,"title":{},"body":{"index.html":{}}}],["followers",{"_index":559,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":342,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["formatting",{"_index":694,"title":{},"body":{"index.html":{}}}],["framework",{"_index":720,"title":{},"body":{"index.html":{}}}],["free",{"_index":570,"title":{},"body":{"index.html":{}}}],["fucking",{"_index":442,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["function",{"_index":127,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":420,"title":{"miscellaneous/functions.html":{}},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["get(channel",{"_index":308,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["getbalancehandler(msg",{"_index":107,"title":{},"body":{"classes/CmdHandler.html":{}}}],["getclient",{"_index":284,"title":{},"body":{"classes/TSC.html":{}}}],["getcoincounthandler(msg",{"_index":103,"title":{},"body":{"classes/CmdHandler.html":{}}}],["getcoinpricehandler(msg",{"_index":105,"title":{},"body":{"classes/CmdHandler.html":{}}}],["getinfocmd",{"_index":246,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["getinfocmd(readinfocommanddto",{"_index":251,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["getinfocommandhandler(channel,msg",{"_index":120,"title":{},"body":{"classes/CmdHandler.html":{}}}],["getting",{"_index":542,"title":{"index.html":{}},"body":{}}],["getvalidatedtype",{"_index":327,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["getvalidatedtype(dtoclass:{new",{"_index":325,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["getvalidatedtype(readinfocommanddto,args,\"channel",{"_index":372,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["getvolumehandler(msg",{"_index":109,"title":{},"body":{"classes/CmdHandler.html":{}}}],["giant",{"_index":633,"title":{},"body":{"index.html":{}}}],["give",{"_index":553,"title":{},"body":{"index.html":{}}}],["gives",{"_index":358,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["go",{"_index":632,"title":{},"body":{"index.html":{}}}],["goodfunc():result",{"_index":626,"title":{},"body":{"index.html":{}}}],["great",{"_index":613,"title":{},"body":{"index.html":{}}}],["gtfo",{"_index":643,"title":{},"body":{"index.html":{}}}],["handle",{"_index":90,"title":{},"body":{"classes/CmdHandler.html":{},"index.html":{}}}],["handler.ts",{"_index":51,"title":{},"body":{"classes/CmdHandler.html":{},"coverage.html":{}}}],["handler.ts:11",{"_index":72,"title":{},"body":{"classes/CmdHandler.html":{}}}],["handler.ts:8",{"_index":60,"title":{},"body":{"classes/CmdHandler.html":{}}}],["handy",{"_index":722,"title":{},"body":{"index.html":{}}}],["haskell",{"_index":664,"title":{},"body":{"index.html":{}}}],["head",{"_index":662,"title":{},"body":{"index.html":{}}}],["hej\").expect(\"parsing",{"_index":370,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["helpful",{"_index":715,"title":{},"body":{"index.html":{}}}],["helpfull",{"_index":450,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["here",{"_index":449,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["hopefullyaresult",{"_index":459,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["i'll",{"_index":600,"title":{},"body":{"index.html":{}}}],["i=0",{"_index":341,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["iamacorrectlynamedchannelexpect",{"_index":701,"title":{},"body":{"index.html":{}}}],["iclient",{"_index":161,"title":{"interfaces/IClient.html":{}},"body":{"interfaces/IClient.html":{},"coverage.html":{}}}],["ics",{"_index":304,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["id",{"_index":211,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["ideal",{"_index":349,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["identifier",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":291,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["idk",{"_index":357,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{}}}],["if(1+1",{"_index":622,"title":{},"body":{"index.html":{}}}],["if(cmdresult.err",{"_index":121,"title":{},"body":{"classes/CmdHandler.html":{}}}],["if(cmdresult==undefined",{"_index":119,"title":{},"body":{"classes/CmdHandler.html":{}}}],["if(dto.hasownproperty(\"channel",{"_index":335,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["if(errors.length",{"_index":356,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["if(p",{"_index":346,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["ignmoreing",{"_index":363,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["ignore",{"_index":336,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["im",{"_index":657,"title":{},"body":{"index.html":{}}}],["imagine",{"_index":631,"title":{},"body":{"index.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{}}}],["included",{"_index":567,"title":{},"body":{"index.html":{}}}],["includes",{"_index":712,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":447,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["increase",{"_index":557,"title":{},"body":{"index.html":{}}}],["indent",{"_index":672,"title":{},"body":{"index.html":{}}}],["index",{"_index":52,"title":{"index.html":{}},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infocmd",{"_index":313,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["infocommand",{"_index":174,"title":{"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{}},"body":{"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"coverage.html":{}}}],["infocommand.name",{"_index":241,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["infocommandcontroller",{"_index":197,"title":{"controllers/InfoCommandController.html":{}},"body":{"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"coverage.html":{}}}],["infocommanddoc",{"_index":191,"title":{},"body":{"classes/InfoCommand-1.html":{},"injectables/InfoCommandService.html":{},"miscellaneous/typealiases.html":{}}}],["infocommandmodel",{"_index":195,"title":{},"body":{"classes/InfoCommand-1.html":{},"injectables/InfoCommandService.html":{}}}],["infocommandmodule",{"_index":31,"title":{"modules/InfoCommandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"modules.html":{},"overview.html":{}}}],["infocommandschema",{"_index":193,"title":{},"body":{"classes/InfoCommand-1.html":{},"modules/InfoCommandModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infocommandservice",{"_index":220,"title":{"injectables/InfoCommandService.html":{}},"body":{"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"overview.html":{}}}],["init",{"_index":277,"title":{},"body":{"classes/TSC.html":{}}}],["injectable",{"_index":44,"title":{"injectables/AppService.html":{},"injectables/InfoCommandService.html":{}},"body":{"injectables/AppService.html":{},"injectables/InfoCommandService.html":{},"coverage.html":{}}}],["injectables",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"injectables/InfoCommandService.html":{},"overview.html":{}}}],["injectmodel",{"_index":258,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["injectmodel(infocommand.name",{"_index":259,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["inside",{"_index":588,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":611,"title":{},"body":{"index.html":{}}}],["instead",{"_index":617,"title":{},"body":{"index.html":{}}}],["interface",{"_index":160,"title":{"interfaces/IClient.html":{},"interfaces/IToString.html":{}},"body":{"interfaces/IClient.html":{},"interfaces/IToString.html":{},"coverage.html":{}}}],["interfaces",{"_index":162,"title":{},"body":{"interfaces/IClient.html":{},"interfaces/IToString.html":{},"overview.html":{}}}],["isnotempty",{"_index":140,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["isnt",{"_index":425,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["isowner",{"_index":310,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isowner(channel",{"_index":314,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["isresult",{"_index":438,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["isresult(hopefullyaresult",{"_index":461,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["it's",{"_index":551,"title":{},"body":{"index.html":{}}}],["itostring",{"_index":83,"title":{"interfaces/IToString.html":{}},"body":{"classes/CmdHandler.html":{},"interfaces/IToString.html":{},"coverage.html":{}}}],["itself",{"_index":681,"title":{},"body":{"index.html":{}}}],["jest",{"_index":704,"title":{},"body":{"index.html":{}}}],["joi",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":636,"title":{},"body":{"index.html":{}}}],["keystroke",{"_index":688,"title":{},"body":{"index.html":{}}}],["kick",{"_index":563,"title":{},"body":{"index.html":{}}}],["lab",{"_index":640,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":667,"title":{},"body":{"index.html":{}}}],["legend",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["less",{"_index":475,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{}}}],["library",{"_index":610,"title":{},"body":{"index.html":{}}}],["lines",{"_index":646,"title":{},"body":{"index.html":{}}}],["lol",{"_index":365,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["looney",{"_index":366,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["lower",{"_index":418,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["lowercase",{"_index":700,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":616,"title":{},"body":{"index.html":{}}}],["make",{"_index":338,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["makes",{"_index":727,"title":{},"body":{"index.html":{}}}],["manual",{"_index":443,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mathematicians",{"_index":666,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":414,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["means",{"_index":575,"title":{},"body":{"index.html":{}}}],["message",{"_index":166,"title":{},"body":{"interfaces/IClient.html":{},"classes/WrongAmountOfArgsError.html":{},"index.html":{}}}],["messages",{"_index":451,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["messagesloglevel",{"_index":290,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":53,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{}}}],["min",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mintomillisecs",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mintomillisecs(min",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minutes",{"_index":581,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":529,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":729,"title":{},"body":{"index.html":{}}}],["mocks",{"_index":698,"title":{},"body":{"index.html":{}}}],["model",{"_index":189,"title":{},"body":{"classes/InfoCommand-1.html":{},"injectables/InfoCommandService.html":{}}}],["model(\"infocommand\",infocommandschema",{"_index":196,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["module",{"_index":19,"title":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["modules",{"_index":21,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":190,"title":{},"body":{"classes/InfoCommand-1.html":{},"injectables/InfoCommandService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{}}}],["mongoosemodule.forfeature",{"_index":240,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost/twitchy",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["monkey",{"_index":641,"title":{},"body":{"index.html":{}}}],["monoglots",{"_index":639,"title":{},"body":{"index.html":{}}}],["more",{"_index":474,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{}}}],["msg",{"_index":69,"title":{},"body":{"classes/CmdHandler.html":{}}}],["msg.trim().split",{"_index":86,"title":{},"body":{"classes/CmdHandler.html":{}}}],["mycoin",{"_index":597,"title":{},"body":{"index.html":{}}}],["name",{"_index":62,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/WrongAmountOfArgsError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nammes",{"_index":699,"title":{},"body":{"index.html":{}}}],["needed",{"_index":477,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{},"index.html":{}}}],["nestjs",{"_index":724,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":270,"title":{},"body":{"classes/ReadInfoCommandDto.html":{},"classes/UpdateInfoCommandDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"classes/InfoCommand-1.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"coverage.html":{},"index.html":{}}}],["noted",{"_index":578,"title":{},"body":{"index.html":{}}}],["now",{"_index":364,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["npm",{"_index":731,"title":{},"body":{"index.html":{}}}],["number",{"_index":254,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["numbers",{"_index":591,"title":{},"body":{"index.html":{}}}],["o",{"_index":650,"title":{},"body":{"index.html":{}}}],["object",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.getownpropertynames(dto",{"_index":344,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["occured",{"_index":717,"title":{},"body":{"index.html":{}}}],["ogfunc",{"_index":434,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["ogfunc(channel",{"_index":460,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["oh",{"_index":554,"title":{},"body":{"index.html":{}}}],["ok",{"_index":79,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["ok('success",{"_index":383,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["ok(2",{"_index":628,"title":{},"body":{"index.html":{}}}],["ok(dto",{"_index":159,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["ok.empty",{"_index":320,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["omittype",{"_index":269,"title":{},"body":{"classes/ReadInfoCommandDto.html":{}}}],["omittype(createinfocommanddto",{"_index":273,"title":{},"body":{"classes/ReadInfoCommandDto.html":{}}}],["once",{"_index":565,"title":{},"body":{"index.html":{}}}],["one",{"_index":561,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":690,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":603,"title":{},"body":{"index.html":{}}}],["optional",{"_index":64,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/WrongAmountOfArgsError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":288,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["opts",{"_index":287,"title":{},"body":{"classes/TSC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":429,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":682,"title":{},"body":{"index.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["over",{"_index":680,"title":{},"body":{"index.html":{}}}],["overview",{"_index":736,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":343,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["package",{"_index":501,"title":{"dependencies.html":{}},"body":{}}],["pants",{"_index":630,"title":{},"body":{"index.html":{}}}],["param",{"_index":218,"title":{},"body":{"controllers/InfoCommandController.html":{},"classes/UnauthorizedError.html":{}}}],["param('id",{"_index":230,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["parameter",{"_index":457,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":268,"title":{},"body":{"classes/ReadInfoCommandDto.html":{},"classes/UpdateInfoCommandDto.html":{}}}],["partialtype(createinfocommanddto",{"_index":468,"title":{},"body":{"classes/UpdateInfoCommandDto.html":{}}}],["password",{"_index":293,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":217,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["patch(':id",{"_index":214,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["people",{"_index":619,"title":{},"body":{"index.html":{}}}],["policy",{"_index":684,"title":{},"body":{"index.html":{}}}],["post",{"_index":205,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["potentially",{"_index":556,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":199,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["prettifier",{"_index":695,"title":{},"body":{"index.html":{}}}],["print",{"_index":582,"title":{},"body":{"index.html":{}}}],["printed",{"_index":703,"title":{},"body":{"index.html":{}}}],["prints",{"_index":707,"title":{},"body":{"index.html":{}}}],["private",{"_index":260,"title":{},"body":{"injectables/InfoCommandService.html":{},"classes/TSC.html":{}}}],["process.env.oauth",{"_index":294,"title":{},"body":{"classes/TSC.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":608,"title":{},"body":{"index.html":{}}}],["productivity",{"_index":604,"title":{},"body":{"index.html":{}}}],["promise",{"_index":75,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"miscellaneous/functions.html":{}}}],["prop",{"_index":185,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["prop({required",{"_index":180,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["properly",{"_index":354,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":133,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand-1.html":{},"classes/TSC.html":{}}}],["propertydescriptor",{"_index":433,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["propertykey",{"_index":431,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["provide:getmodeltoken(infocommand.name",{"_index":242,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["prss",{"_index":685,"title":{},"body":{"index.html":{}}}],["ps",{"_index":663,"title":{},"body":{"index.html":{}}}],["quotes",{"_index":577,"title":{},"body":{"index.html":{}}}],["r",{"_index":439,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["r.hasownproperty('err",{"_index":445,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["r.hasownproperty('ok",{"_index":444,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["ray",{"_index":569,"title":{},"body":{"index.html":{}}}],["read",{"_index":441,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["readability",{"_index":605,"title":{},"body":{"index.html":{}}}],["readinfocommanddto",{"_index":252,"title":{"classes/ReadInfoCommandDto.html":{}},"body":{"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/InfoCommandController.html":{}}}],["reason",{"_index":552,"title":{},"body":{"index.html":{}}}],["referering",{"_index":683,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":202,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["remove(@param('id",{"_index":232,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["remove(id",{"_index":208,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["removes",{"_index":266,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["required",{"_index":192,"title":{},"body":{"classes/InfoCommand-1.html":{},"index.html":{}}}],["res",{"_index":386,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["res=await",{"_index":371,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}],["resources",{"_index":725,"title":{},"body":{"index.html":{}}}],["rest",{"_index":351,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["result",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":124,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["returns",{"_index":74,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["rtfm",{"_index":454,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["running",{"_index":730,"title":{},"body":{"index.html":{}}}],["runs",{"_index":691,"title":{},"body":{"index.html":{}}}],["rusts",{"_index":612,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["saves",{"_index":687,"title":{},"body":{"index.html":{}}}],["say(channel",{"_index":165,"title":{},"body":{"interfaces/IClient.html":{}}}],["schema",{"_index":186,"title":{},"body":{"classes/InfoCommand-1.html":{},"modules/InfoCommandModule.html":{}}}],["schemafactory",{"_index":187,"title":{},"body":{"classes/InfoCommand-1.html":{}}}],["schemafactory.createforclass(infocommand",{"_index":194,"title":{},"body":{"classes/InfoCommand-1.html":{},"miscellaneous/variables.html":{}}}],["schemas/info",{"_index":238,"title":{},"body":{"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{}}}],["second",{"_index":458,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["seems",{"_index":413,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["self",{"_index":70,"title":{},"body":{"classes/CmdHandler.html":{}}}],["sequence",{"_index":676,"title":{},"body":{"index.html":{}}}],["serious",{"_index":659,"title":{},"body":{"index.html":{}}}],["setup",{"_index":697,"title":{},"body":{"index.html":{}}}],["shared/interfaces",{"_index":84,"title":{},"body":{"classes/CmdHandler.html":{}}}],["shared/utilities/args",{"_index":78,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["side",{"_index":669,"title":{},"body":{"index.html":{}}}],["signatures",{"_index":615,"title":{},"body":{"index.html":{}}}],["slightly",{"_index":692,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/UpdateInfoCommandDto.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["speed",{"_index":607,"title":{},"body":{"index.html":{}}}],["split",{"_index":647,"title":{},"body":{"index.html":{}}}],["splitting",{"_index":645,"title":{},"body":{"index.html":{}}}],["src/.../args.ts",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.ts",{"_index":533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../http.ts",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../info",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../time.ts",{"_index":534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../twitchclientsingleton.ts",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/info",{"_index":130,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/InfoCommand.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"modules/InfoCommandModule.html":{},"injectables/InfoCommandService.html":{},"classes/ReadInfoCommandDto.html":{},"classes/TwitchService.html":{},"classes/UpdateInfoCommandDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/twitch",{"_index":49,"title":{},"body":{"classes/CmdHandler.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stability",{"_index":606,"title":{},"body":{"index.html":{}}}],["standard",{"_index":94,"title":{},"body":{"classes/CmdHandler.html":{}}}],["standardsetup",{"_index":128,"title":{},"body":{"classes/CmdHandler.html":{}}}],["start",{"_index":648,"title":{},"body":{"index.html":{}}}],["started",{"_index":543,"title":{"index.html":{}},"body":{}}],["statements",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":135,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TSC.html":{}}}],["strictly",{"_index":686,"title":{},"body":{"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"interfaces/IToString.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["strings",{"_index":586,"title":{},"body":{"index.html":{}}}],["structure",{"_index":573,"title":{},"body":{"index.html":{}}}],["such",{"_index":123,"title":{},"body":{"classes/CmdHandler.html":{}}}],["suggested",{"_index":723,"title":{},"body":{"index.html":{}}}],["super",{"_index":462,"title":{},"body":{"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["support",{"_index":733,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":339,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["svg",{"_index":734,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":96,"title":{},"body":{"classes/CmdHandler.html":{}}}],["symbol",{"_index":596,"title":{},"body":{"index.html":{}}}],["system",{"_index":424,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["t",{"_index":385,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":427,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["target",{"_index":430,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["temporary",{"_index":436,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["terms",{"_index":689,"title":{},"body":{"index.html":{}}}],["test",{"_index":377,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["test(channel",{"_index":407,"title":{},"body":{"classes/TwitchTest.html":{}}}],["testing",{"_index":719,"title":{},"body":{"index.html":{}}}],["tests",{"_index":696,"title":{},"body":{"index.html":{}}}],["thats",{"_index":642,"title":{},"body":{"index.html":{}}}],["this._client",{"_index":296,"title":{},"body":{"classes/TSC.html":{}}}],["this._client.connect",{"_index":299,"title":{},"body":{"classes/TSC.html":{}}}],["this.channel",{"_index":149,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["this.cmd",{"_index":150,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["this.ics.create(dto",{"_index":319,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["this.ics.getinfocmd",{"_index":324,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["this.info",{"_index":151,"title":{},"body":{"classes/CreateInfoCommandDto.html":{}}}],["this.infocommandmodel.create(createinfocommanddto",{"_index":261,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["this.infocommandmodel.findone(readinfocommanddto",{"_index":263,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["this.infocommandmodel.findone(readinfocommanddto).exec",{"_index":262,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["this.infocommandservice.create",{"_index":406,"title":{},"body":{"classes/TwitchService.html":{}}}],["this.infocommandservice.create(createinfocommanddto",{"_index":228,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["this.infocommandservice.findall",{"_index":229,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["this.infocommandservice.remove(+id",{"_index":233,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["this.infocommandservice.update(+id",{"_index":231,"title":{},"body":{"controllers/InfoCommandController.html":{}}}],["this.message",{"_index":465,"title":{},"body":{"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["this.name",{"_index":463,"title":{},"body":{"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{}}}],["this.tic.create(channel",{"_index":112,"title":{},"body":{"classes/CmdHandler.html":{}}}],["those",{"_index":589,"title":{},"body":{"index.html":{}}}],["thously",{"_index":661,"title":{},"body":{"index.html":{}}}],["throw",{"_index":440,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["throwing",{"_index":618,"title":{},"body":{"index.html":{}}}],["tic",{"_index":65,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["tic.x('#x",{"_index":387,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["tldr",{"_index":671,"title":{},"body":{"index.html":{}}}],["tmi",{"_index":286,"title":{},"body":{"classes/TSC.html":{}}}],["tmi.client",{"_index":280,"title":{},"body":{"classes/TSC.html":{}}}],["tmi.client(opts",{"_index":298,"title":{},"body":{"classes/TSC.html":{}}}],["tmi.js",{"_index":76,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"dependencies.html":{}}}],["todo",{"_index":89,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{}}}],["token}{command",{"_index":574,"title":{},"body":{"index.html":{}}}],["tostring",{"_index":172,"title":{},"body":{"interfaces/IToString.html":{}}}],["tripping",{"_index":679,"title":{},"body":{"index.html":{}}}],["true",{"_index":181,"title":{},"body":{"classes/InfoCommand-1.html":{},"classes/TSC.html":{},"classes/UnauthorizedError.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":316,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["ts",{"_index":81,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"dependencies.html":{},"index.html":{}}}],["tsc",{"_index":274,"title":{"classes/TSC.html":{}},"body":{"classes/TSC.html":{},"coverage.html":{}}}],["twitchinfocommand",{"_index":58,"title":{"classes/TwitchInfoCommand.html":{}},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["twitchowner",{"_index":306,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["twitchservice",{"_index":388,"title":{"classes/TwitchService.html":{}},"body":{"classes/TwitchService.html":{},"coverage.html":{}}}],["twitchtest",{"_index":376,"title":{"classes/TwitchTest.html":{}},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"coverage.html":{}}}],["twitchy",{"_index":544,"title":{},"body":{"index.html":{}}}],["two",{"_index":428,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":63,"title":{},"body":{"classes/CmdHandler.html":{},"classes/CreateInfoCommandDto.html":{},"interfaces/IClient.html":{},"classes/InfoCommand-1.html":{},"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"classes/WrongAmountOfArgsError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":738,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":455,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["types",{"_index":271,"title":{},"body":{"classes/ReadInfoCommandDto.html":{},"classes/UpdateInfoCommandDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":678,"title":{},"body":{"index.html":{}}}],["typesystem",{"_index":446,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["t},args:any[],channel?:string",{"_index":326,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["unauthorized",{"_index":464,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["unauthorizederror",{"_index":311,"title":{"classes/UnauthorizedError.html":{}},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"coverage.html":{}}}],["undefined",{"_index":297,"title":{},"body":{"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/UnauthorizedError.html":{}}}],["understand",{"_index":716,"title":{},"body":{"index.html":{}}}],["understanding",{"_index":614,"title":{},"body":{"index.html":{}}}],["understands",{"_index":353,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["unsuccesfull",{"_index":702,"title":{},"body":{"index.html":{}}}],["unwrap",{"_index":318,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["update",{"_index":203,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"index.html":{}}}],["update(id",{"_index":212,"title":{},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{}}}],["updateinfocmd",{"_index":113,"title":{},"body":{"classes/CmdHandler.html":{}}}],["updateinfocommanddto",{"_index":213,"title":{"classes/UpdateInfoCommandDto.html":{}},"body":{"controllers/InfoCommandController.html":{},"injectables/InfoCommandService.html":{},"classes/UpdateInfoCommandDto.html":{},"coverage.html":{}}}],["updateinfocommandhandler(channel,userstate",{"_index":114,"title":{},"body":{"classes/CmdHandler.html":{}}}],["updates",{"_index":265,"title":{},"body":{"injectables/InfoCommandService.html":{}}}],["url",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usage",{"_index":448,"title":{},"body":{"classes/UnauthorizedError.html":{},"index.html":{}}}],["use",{"_index":609,"title":{},"body":{"index.html":{}}}],["user",{"_index":398,"title":{},"body":{"classes/TwitchService.html":{},"classes/UnauthorizedError.html":{},"index.html":{}}}],["username",{"_index":170,"title":{},"body":{"interfaces/IClient.html":{},"classes/TSC.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"miscellaneous/variables.html":{}}}],["username.lower",{"_index":415,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["users",{"_index":564,"title":{},"body":{"index.html":{}}}],["userstate",{"_index":68,"title":{},"body":{"classes/CmdHandler.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["userstate.username.tolowercase",{"_index":419,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["usevalue:infocommand",{"_index":243,"title":{},"body":{"modules/InfoCommandModule.html":{}}}],["using",{"_index":421,"title":{},"body":{"classes/UnauthorizedError.html":{},"miscellaneous/functions.html":{}}}],["val",{"_index":709,"title":{},"body":{"index.html":{}}}],["val=res.unwrap",{"_index":373,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["validate",{"_index":147,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["validate(dto",{"_index":156,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["validates",{"_index":396,"title":{},"body":{"classes/TwitchService.html":{}}}],["validationerror",{"_index":148,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["validator",{"_index":146,"title":{},"body":{"classes/CreateInfoCommandDto.html":{},"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"dependencies.html":{}}}],["value",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":593,"title":{},"body":{"index.html":{}}}],["variable",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":740,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":721,"title":{},"body":{"index.html":{}}}],["void",{"_index":283,"title":{},"body":{"classes/TSC.html":{},"classes/TwitchService.html":{}}}],["volume",{"_index":108,"title":{},"body":{"classes/CmdHandler.html":{}}}],["way",{"_index":665,"title":{},"body":{"index.html":{}}}],["whisper",{"_index":164,"title":{},"body":{"interfaces/IClient.html":{}}}],["whisper(username",{"_index":168,"title":{},"body":{"interfaces/IClient.html":{}}}],["whole",{"_index":711,"title":{},"body":{"index.html":{}}}],["wont",{"_index":637,"title":{},"body":{"index.html":{}}}],["works",{"_index":361,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["writing",{"_index":403,"title":{},"body":{"classes/TwitchService.html":{}}}],["written",{"_index":587,"title":{},"body":{"index.html":{}}}],["wrongamountofargserror",{"_index":469,"title":{"classes/WrongAmountOfArgsError.html":{}},"body":{"classes/WrongAmountOfArgsError.html":{},"coverage.html":{}}}],["x",{"_index":368,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["x(channel",{"_index":384,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchTest.html":{}}}],["x:1",{"_index":651,"title":{},"body":{"index.html":{}}}],["y",{"_index":378,"title":{},"body":{"classes/TwitchInfoCommand.html":{},"classes/TwitchService.html":{},"classes/TwitchTest.html":{},"index.html":{}}}],["y:2",{"_index":652,"title":{},"body":{"index.html":{}}}],["yall",{"_index":452,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["yes",{"_index":473,"title":{},"body":{"classes/WrongAmountOfArgsError.html":{}}}],["you'll",{"_index":555,"title":{},"body":{"index.html":{}}}],["z",{"_index":674,"title":{},"body":{"index.html":{}}}],["z();long",{"_index":675,"title":{},"body":{"index.html":{}}}],["z:3",{"_index":653,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoCommandModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n\tconstructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nInfoCommandModule\n\nInfoCommandModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nInfoCommandModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoCommandModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { InfoCommandModule } from './info-command/info-command.module';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n\timports: [\n\t\tInfoCommandModule,\n\t\tMongooseModule.forRoot('mongodb://localhost/twitchy'),\n\t],\n\tcontrollers: [AppController],\n\tproviders: [AppService],\n\t//,exports:[InfoCommandModule]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CmdHandler.html":{"url":"classes/CmdHandler.html","title":"class - CmdHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CmdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/cmd-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                executeCmd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(TIC: TwitchInfoCommand)\n                    \n                \n                        \n                            \n                                Defined in src/twitch-bot/cmd-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        TIC\n                                                  \n                                                        \n                                                                        TwitchInfoCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            executeCmd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeCmd(channel: string, userstate: Userstate, msg: string, self: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/cmd-handler.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userstate\n                                    \n                                                Userstate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Userstate } from 'tmi.js';\nimport { extractCommandArgs } from './shared/utilities/args';\nimport { Result, Ok, Err } from 'ts-results';\n\nimport { TwitchInfoCommand } from './info-command/info-command';\nimport { IToString } from './shared/interfaces';\n\nexport class CmdHandler {\n\tconstructor(private TIC: TwitchInfoCommand) {}\n\n\tasync executeCmd(\n\t\tchannel: string,\n\t\tuserstate: Userstate,\n\t\tmsg: string,\n\t\tself: boolean,\n\t): Promise> {\n\t\t//const command = msg.trim().split(\" \")\n\t\tconst commandName = msg.trim().split(' ')[0];\n\n\t\t//TODO handle command results\n\t\tlet cmdResult: Result;\n\t\tconst args = extractCommandArgs(msg).expect('parsing args');\n\t\t//standard commands\n\t\tswitch (commandName) {\n\t\t\t/*\n\t\t\tcase \"!createAutoMsg\":\n\t\t\t\tcmdResult=await createNewAutoMsgHandler(channel,userstate,msg);\n\t\t\tbreak\n\t\t\tcase \"!coinCount\":\n\t\t\t\tcmdResult=await getCoinCountHandler(msg)\n\t\t\tbreak\n\t\t\tcase \"!coinPrice\":\n\t\t\t\tcmdResult=await getCoinPriceHandler(msg)\n\t\t\tbreak\n\t\t\tcase \"!balance\":\n\t\t\t\tcmdResult=await getBalanceHandler(msg)\n\t\t\tbreak\n\t\t\tcase \"!volume\":\n\t\t\t\tcmdResult=await getVolumeHandler(msg)\n\t\t\tbreak\n\t\t\t*/\n\t\t\tcase '!createInfoCmd':\n\t\t\t\tcmdResult = await this.TIC.create(channel, userstate, args);\n\t\t\t\tbreak;\n\t\t\tcase '!updateInfoCmd':\n\t\t\t\t//cmdResult=await updateInfoCommandHandler(channel,userstate, msg)\n\t\t\t\tbreak;\n\t\t\tcase '!deleteInfoCmd':\n\t\t\t\t//cmdResult=await deleteInfoCommandHandler(channel,userstate, msg)\n\t\t\t\tbreak;\n\t\t}\n\t\t//check custom commands\n\t\t/*\n\t\tif(cmdResult==undefined){\n\t\t\tcmdResult=await getInfoCommandHandler(channel,msg)\n\t\t\tif(cmdResult.err){\n\t\t\t\tclient.whisper(userstate.username,\"no such command\")\n\t\t\t\treturn Err(new Error(\"no such command\"))\n\t\t\t}\n\t\t}\n\t\t*/\n\t\treturn cmdResult;\n\t}\n}\n\n//function standardSetup() {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInfoCommandDto.html":{"url":"classes/CreateInfoCommandDto.html","title":"class - CreateInfoCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInfoCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/dto/create-info-command.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                cmd\n                            \n                            \n                                info\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                createAndValidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(channel: string, cmd: string, info: string)\n                    \n                \n                        \n                            \n                                Defined in src/info-command/dto/create-info-command.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cmd\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/dto/create-info-command.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cmd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/dto/create-info-command.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/dto/create-info-command.dto.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            createAndValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAndValidate(channel: string, cmd: string, info: string)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/dto/create-info-command.dto.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { Result, Ok, Err } from 'ts-results';\nimport { validate, ValidationError } from 'class-validator';\n\nexport class CreateInfoCommandDto {\n\tconstructor(channel: string, cmd: string, info: string) {\n\t\tthis.channel = channel;\n\t\tthis.cmd = cmd;\n\t\tthis.info = info;\n\t}\n\tstatic async createAndValidate(\n\t\tchannel: string,\n\t\tcmd: string,\n\t\tinfo: string,\n\t): Promise> {\n\t\tconst dto = new CreateInfoCommandDto(channel, cmd, info);\n\n\t\tconst errors = await validate(dto);\n\t\tif (errors.length > 0) return Err(errors);\n\n\t\treturn Ok(dto);\n\t}\n\t@IsNotEmpty()\n\tchannel: string;\n\n\t@IsNotEmpty()\n\tcmd: string;\n\n\t@IsNotEmpty()\n\tinfo: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClient.html":{"url":"interfaces/IClient.html","title":"interface - IClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/shared/interfaces/client.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    say\n                                \n                                \n                                    whisper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            say\n                        \n                        \n                    \n                \n            \n            \n                \nsay(channel: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/shared/interfaces/client.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whisper\n                        \n                        \n                    \n                \n            \n            \n                \nwhisper(username: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/shared/interfaces/client.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IClient {\n\tsay(channel: string, message: string): Promise;\n\twhisper(username: string, message: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IToString.html":{"url":"interfaces/IToString.html","title":"interface - IToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/shared/interfaces/string.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/shared/interfaces/string.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IToString {\n\ttoString(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InfoCommand.html":{"url":"classes/InfoCommand.html","title":"class - InfoCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InfoCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/entities/info-command.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InfoCommand {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InfoCommand-1.html":{"url":"classes/InfoCommand-1.html","title":"class - InfoCommand-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InfoCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/schemas/info-command.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                cmd\n                            \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/schemas/info-command.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cmd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/schemas/info-command.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/info-command/schemas/info-command.schema.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, model } from 'mongoose';\n\nexport type InfoCommandDoc = InfoCommand & Document;\n\n@Schema()\nexport class InfoCommand {\n\t@Prop({ required: true })\n\tchannel: string;\n\n\t@Prop({ required: true })\n\tcmd: string;\n\n\t@Prop({ required: true })\n\tinfo: string;\n}\n\nexport const InfoCommandSchema = SchemaFactory.createForClass(InfoCommand);\n//export const InfoCommandModel = model(\"InfoCommand\",InfoCommandSchema)\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InfoCommandController.html":{"url":"controllers/InfoCommandController.html","title":"controller - InfoCommandController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InfoCommandController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/info-command.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                info-command\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createInfoCommandDto: CreateInfoCommandDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/info-command/info-command.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInfoCommandDto\n                                    \n                                                CreateInfoCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/info-command/info-command.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/info-command/info-command.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateInfoCommandDto: UpdateInfoCommandDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/info-command/info-command.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInfoCommandDto\n                                    \n                                                UpdateInfoCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tBody,\n\tPatch,\n\tParam,\n\tDelete,\n} from '@nestjs/common';\nimport { InfoCommandService } from './info-command.service';\nimport { CreateInfoCommandDto } from './dto/create-info-command.dto';\nimport { UpdateInfoCommandDto } from './dto/update-info-command.dto';\n\n@Controller('info-command')\nexport class InfoCommandController {\n\tconstructor(private readonly infoCommandService: InfoCommandService) {}\n\n\t@Post()\n\tcreate(@Body() createInfoCommandDto: CreateInfoCommandDto) {\n\t\tconsole.log('executed');\n\t\treturn this.infoCommandService.create(createInfoCommandDto);\n\t}\n\n\t@Get()\n\tfindAll() {\n\t\treturn this.infoCommandService.findAll();\n\t}\n\n\t@Patch(':id')\n\tupdate(\n\t\t@Param('id') id: string,\n\t\t@Body() updateInfoCommandDto: UpdateInfoCommandDto,\n\t) {\n\t\treturn this.infoCommandService.update(+id, updateInfoCommandDto);\n\t}\n\n\t@Delete(':id')\n\tremove(@Param('id') id: string) {\n\t\treturn this.infoCommandService.remove(+id);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoCommandModule.html":{"url":"modules/InfoCommandModule.html","title":"module - InfoCommandModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoCommandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoCommandModule\n\n\n\ncluster_InfoCommandModule_providers\n\n\n\n\nInfoCommandService\n\nInfoCommandService\n\n\n\nInfoCommandModule\n\nInfoCommandModule\n\nInfoCommandModule -->\n\nInfoCommandService->InfoCommandModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/info-command/info-command.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InfoCommandService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InfoCommandController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InfoCommandService } from './info-command.service';\nimport { InfoCommandController } from './info-command.controller';\nimport { InfoCommand, InfoCommandSchema } from './schemas/info-command.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n\timports: [\n\t\tMongooseModule.forFeature([\n\t\t\t{ name: InfoCommand.name, schema: InfoCommandSchema },\n\t\t]),\n\t],\n\tcontrollers: [InfoCommandController],\n\tproviders: [\n\t\tInfoCommandService,\n\t\t/*\n\t\t,{\n\t\t\tprovide:getModelToken(InfoCommand.name)\n\t\t\t,useValue:InfoCommand\n\t\t}\n\t\t*/\n\t],\n\t//,exports:[InfoCommandService,InfoCommandController]\n})\nexport class InfoCommandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoCommandService.html":{"url":"injectables/InfoCommandService.html","title":"injectable - InfoCommandService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoCommandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/info-command.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getInfoCmd\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(InfoCommandModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/info-command/info-command.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        InfoCommandModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createInfoCommandDto: CreateInfoCommandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/info-command.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInfoCommandDto\n                                    \n                                                CreateInfoCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/info-command.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfoCmd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfoCmd(readInfoCommandDto: ReadInfoCommandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/info-command.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    readInfoCommandDto\n                                    \n                                                ReadInfoCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/info-command.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateInfoCommandDto: UpdateInfoCommandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/info-command.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInfoCommandDto\n                                    \n                                                UpdateInfoCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateInfoCommandDto } from './dto/create-info-command.dto';\nimport { UpdateInfoCommandDto } from './dto/update-info-command.dto';\nimport { ReadInfoCommandDto } from './dto/read-info-command.dto';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { InfoCommand, InfoCommandDoc } from './schemas/info-command.schema';\n\n@Injectable()\nexport class InfoCommandService {\n\tconstructor(\n\t\t@InjectModel(InfoCommand.name)\n\t\tprivate InfoCommandModel: Model,\n\t) {}\n\n\tasync create(\n\t\tcreateInfoCommandDto: CreateInfoCommandDto,\n\t): Promise {\n\t\treturn this.InfoCommandModel.create(createInfoCommandDto);\n\t}\n\n\tasync getInfoCmd(readInfoCommandDto: ReadInfoCommandDto) {\n\t\treturn this.InfoCommandModel.findOne(readInfoCommandDto).exec();\n\t\t//return this.InfoCommandModel.findOne(readInfoCommandDto)\n\t}\n\n\tfindAll() {\n\t\treturn `This action returns all infoCommand`;\n\t}\n\n\tupdate(id: number, updateInfoCommandDto: UpdateInfoCommandDto) {\n\t\treturn `This action updates a #${id} infoCommand`;\n\t}\n\n\tremove(id: number) {\n\t\treturn `This action removes a #${id} infoCommand`;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadInfoCommandDto.html":{"url":"classes/ReadInfoCommandDto.html","title":"class - ReadInfoCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadInfoCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/dto/read-info-command.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType } from '@nestjs/mapped-types';\nimport { CreateInfoCommandDto } from './create-info-command.dto';\n\nexport class ReadInfoCommandDto extends PartialType(\n\tOmitType(CreateInfoCommandDto, ['info'] as const),\n) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TSC.html":{"url":"classes/TSC.html","title":"class - TSC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TSC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/shared/twitchClientSingleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tmi.Client\n\n                        \n                    \n                        \n                            \n                                    Defined in src/twitch-bot/shared/twitchClientSingleton.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/shared/twitchClientSingleton.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in src/twitch-bot/shared/twitchClientSingleton.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as tmi from 'tmi.js';\n\nconst opts = {\n\toptions: { debug: true, messagesLogLevel: 'info' },\n\tidentity: {\n\t\tusername: 'DaRockeCat',\n\t\tpassword: process.env.OAUTH,\n\t},\n\tchannels: ['darockecat'],\n};\n\nexport class TSC {\n\tprivate static _client: tmi.Client;\n\n\tstatic init() {\n\t\tif (this._client == undefined) {\n\t\t\tthis._client = new tmi.client(opts);\n\t\t\tthis._client.connect();\n\t\t}\n\t}\n\n\tstatic get client(): tmi.Client {\n\t\treturn this._client;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitchInfoCommand.html":{"url":"classes/TwitchInfoCommand.html","title":"class - TwitchInfoCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitchInfoCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/info-command/info-command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ICS: InfoCommandService)\n                    \n                \n                        \n                            \n                                Defined in src/twitch-bot/info-command/info-command.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ICS\n                                                  \n                                                        \n                                                                        InfoCommandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(channel: string, userstate: Userstate, ...undefined: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @TwitchOwner()\n                \n            \n\n            \n                \n                    Defined in src/twitch-bot/info-command/info-command.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userstate\n                                    \n                                                Userstate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(channel: string, cmd: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twitch-bot/info-command/info-command.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InfoCommandService } from '../../info-command/info-command.service';\nimport { extractCommandArgs } from '../shared/utilities/args';\nimport { CreateInfoCommandDto } from '../../info-command/dto/create-info-command.dto';\nimport { ReadInfoCommandDto } from '../../info-command/dto/read-info-command.dto';\nimport { Userstate } from 'tmi.js';\nimport { Result, Ok, Err } from 'ts-results';\n\nimport { TwitchOwner, isOwner, UnauthorizedError } from '../auth';\n\nimport { validate, ValidationError } from 'class-validator';\n\nexport class TwitchInfoCommand {\n\tconstructor(private ICS: InfoCommandService) {}\n\n\t//!infoCmd create {cmd} \"{info}\"\n\t/**\n\t *\n\t */\n\t@TwitchOwner()\n\tasync create(\n\t\tchannel: string,\n\t\tuserstate: Userstate,\n\t\t...[cmd, info]: any[]\n\t): Promise> {\n\t\tif (isOwner(channel, userstate) == false) {\n\t\t\treturn Err(new UnauthorizedError());\n\t\t}\n\t\ttry {\n\t\t\tconst dto = (\n\t\t\t\tawait CreateInfoCommandDto.createAndValidate(channel, cmd, info)\n\t\t\t).unwrap();\n\n\t\t\tawait this.ICS.create(dto);\n\t\t\treturn Ok.EMPTY;\n\t\t} catch (e) {\n\t\t\treturn Err(e);\n\t\t}\n\t}\n\n\tasync get(channel: string, cmd: string) {\n\t\treturn this.ICS.getInfoCmd({ channel, cmd });\n\t}\n}\n\n/*\nasync function getValidatedType(dtoClass:{new ():T},args:any[],channel?:string)\n//async function getValidatedType\n//(dtoClass:T,args:any[],channel?:string)\n:Promise> {\n\tconst dto=new dtoClass()\n\tconsole.log(Object.getOwnPropertyNames(dto))\n\t//console.log(Object.keys(dto))\n\t//console.log(Object.getOwnPropertyDescriptors(dtoClass))\n\t//console.log(Object.getOwnPropertyDescriptors(dto))\n\tif(dto.hasOwnProperty(\"channel\")){\n\t\t//@ts-ignore - we checked to make sure it has\n\t\tdto.channel=channel\n\t}\n\tlet i=0;\n\tfor(let p of Object.getOwnPropertyNames(dto)){\n\t\t//console.log(\"property: \", p)\n\t\tif(p == \"channel\") continue\n\t\tdto[p]=args[i]\n\t\ti++\n\t}\n\n\t//@ts-ignore - not ideal but TS doesnt get it\n\t//and the rest of the code understands properly\n\tconst errors=await validate(dto)\n\tif(errors.length > 0){\n\t\treturn Err(errors)\n\t}\n\n\t//TODO idk why this gives compiler error but works fine ignmoreing it\n\t//at least for now lol, catch you in the looney bin\n\treturn Ok(dto)\n}\n*/\n/*\nasync function x(){\n\tconst args=extractCommandArgs(\"!createInfoCmd hej\").expect(\"parsing args\")\n\tconst res=await getValidatedType(ReadInfoCommandDto,args,\"channel\")\n\n\tconst val=res.unwrap()\n\tconsole.log(val.channel)\n\tconsole.log(val.cmd)\n}\n*/\n\nclass TwitchTest {\n\t@TwitchOwner()\n\ttest(\n\t\tchannel: string,\n\t\tuserstate: Userstate,\n\t\tx: string,\n\t\ty: string,\n\t): Result {\n\t\tconsole.log('channel:', channel);\n\t\tconsole.log('userstate:', userstate);\n\t\tconsole.log('x:', x);\n\t\tconsole.log('y:', y);\n\t\treturn Ok('success');\n\t}\n\n\t@TwitchOwner()\n\tx(channel: string, userstate: Userstate): Result {\n\t\treturn Ok.EMPTY;\n\t}\n}\n\nfunction t() {\n\tconst tIC = new TwitchTest();\n\tconst res = tIC.x('#x', { username: 'x' });\n\tconsole.log('x:', res);\n}\nt();\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitchService.html":{"url":"classes/TwitchService.html","title":"class - TwitchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/twitch/twitch.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(infoCommandService: InfoCommandService)\n                    \n                \n                        \n                            \n                                Defined in src/info-command/twitch/twitch.service.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infoCommandService\n                                                  \n                                                        \n                                                                        InfoCommandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/twitch/twitch.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            y\n                        \n                        \n                    \n                \n            \n            \n                \ny()\n                \n            \n\n\n            \n                \n                    Defined in src/info-command/twitch/twitch.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InfoCommandService } from '../info-command.service';\n\nexport class TwitchService {\n\tconstructor(private infoCommandService: InfoCommandService) {}\n\n\ty() {\n\t\tconsole.log('Y');\n\t}\n\n\tcreate(data: any) {\n\t\t//validates data\n\t\t//validates authority of user\n\t\t//executes corresponding function\n\t\t//emits a event for writing back to the chat / user\n\t\t//return this.infoCommandService.create()\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitchTest.html":{"url":"classes/TwitchTest.html","title":"class - TwitchTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitchTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/info-command/info-command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                test\n                            \n                            \n                                x\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test\n                        \n                        \n                    \n                \n            \n            \n                \ntest(channel: string, userstate: Userstate, x: string, y: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @TwitchOwner()\n                \n            \n\n            \n                \n                    Defined in src/twitch-bot/info-command/info-command.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userstate\n                                    \n                                                Userstate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Result\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            x\n                        \n                        \n                    \n                \n            \n            \n                \nx(channel: string, userstate: Userstate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @TwitchOwner()\n                \n            \n\n            \n                \n                    Defined in src/twitch-bot/info-command/info-command.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userstate\n                                    \n                                                Userstate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Result\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InfoCommandService } from '../../info-command/info-command.service';\nimport { extractCommandArgs } from '../shared/utilities/args';\nimport { CreateInfoCommandDto } from '../../info-command/dto/create-info-command.dto';\nimport { ReadInfoCommandDto } from '../../info-command/dto/read-info-command.dto';\nimport { Userstate } from 'tmi.js';\nimport { Result, Ok, Err } from 'ts-results';\n\nimport { TwitchOwner, isOwner, UnauthorizedError } from '../auth';\n\nimport { validate, ValidationError } from 'class-validator';\n\nexport class TwitchInfoCommand {\n\tconstructor(private ICS: InfoCommandService) {}\n\n\t//!infoCmd create {cmd} \"{info}\"\n\t/**\n\t *\n\t */\n\t@TwitchOwner()\n\tasync create(\n\t\tchannel: string,\n\t\tuserstate: Userstate,\n\t\t...[cmd, info]: any[]\n\t): Promise> {\n\t\tif (isOwner(channel, userstate) == false) {\n\t\t\treturn Err(new UnauthorizedError());\n\t\t}\n\t\ttry {\n\t\t\tconst dto = (\n\t\t\t\tawait CreateInfoCommandDto.createAndValidate(channel, cmd, info)\n\t\t\t).unwrap();\n\n\t\t\tawait this.ICS.create(dto);\n\t\t\treturn Ok.EMPTY;\n\t\t} catch (e) {\n\t\t\treturn Err(e);\n\t\t}\n\t}\n\n\tasync get(channel: string, cmd: string) {\n\t\treturn this.ICS.getInfoCmd({ channel, cmd });\n\t}\n}\n\n/*\nasync function getValidatedType(dtoClass:{new ():T},args:any[],channel?:string)\n//async function getValidatedType\n//(dtoClass:T,args:any[],channel?:string)\n:Promise> {\n\tconst dto=new dtoClass()\n\tconsole.log(Object.getOwnPropertyNames(dto))\n\t//console.log(Object.keys(dto))\n\t//console.log(Object.getOwnPropertyDescriptors(dtoClass))\n\t//console.log(Object.getOwnPropertyDescriptors(dto))\n\tif(dto.hasOwnProperty(\"channel\")){\n\t\t//@ts-ignore - we checked to make sure it has\n\t\tdto.channel=channel\n\t}\n\tlet i=0;\n\tfor(let p of Object.getOwnPropertyNames(dto)){\n\t\t//console.log(\"property: \", p)\n\t\tif(p == \"channel\") continue\n\t\tdto[p]=args[i]\n\t\ti++\n\t}\n\n\t//@ts-ignore - not ideal but TS doesnt get it\n\t//and the rest of the code understands properly\n\tconst errors=await validate(dto)\n\tif(errors.length > 0){\n\t\treturn Err(errors)\n\t}\n\n\t//TODO idk why this gives compiler error but works fine ignmoreing it\n\t//at least for now lol, catch you in the looney bin\n\treturn Ok(dto)\n}\n*/\n/*\nasync function x(){\n\tconst args=extractCommandArgs(\"!createInfoCmd hej\").expect(\"parsing args\")\n\tconst res=await getValidatedType(ReadInfoCommandDto,args,\"channel\")\n\n\tconst val=res.unwrap()\n\tconsole.log(val.channel)\n\tconsole.log(val.cmd)\n}\n*/\n\nclass TwitchTest {\n\t@TwitchOwner()\n\ttest(\n\t\tchannel: string,\n\t\tuserstate: Userstate,\n\t\tx: string,\n\t\ty: string,\n\t): Result {\n\t\tconsole.log('channel:', channel);\n\t\tconsole.log('userstate:', userstate);\n\t\tconsole.log('x:', x);\n\t\tconsole.log('y:', y);\n\t\treturn Ok('success');\n\t}\n\n\t@TwitchOwner()\n\tx(channel: string, userstate: Userstate): Result {\n\t\treturn Ok.EMPTY;\n\t}\n}\n\nfunction t() {\n\tconst tIC = new TwitchTest();\n\tconst res = tIC.x('#x', { username: 'x' });\n\tconsole.log('x:', res);\n}\nt();\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedError.html":{"url":"classes/UnauthorizedError.html","title":"class - UnauthorizedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/auth.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/twitch-bot/auth.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Userstate } from 'tmi.js';\nimport { Result, Err } from 'ts-results';\n\n//TODO dubble check this is true, but seems like it or maybe username.lower\nexport function isOwner(channel: string, userstate: Userstate): boolean {\n\t//TODO this assumes that channel is always lower case\n\treturn channel == '#' + userstate.username.toLowerCase();\n}\n\n/**\n * Functions using this decorator should return Result,\n * because atm the type system isnt enforcing that properly.\n * Also it must take at least two parameters in this order\n * @param {string} channel\n * @param {Userstate} userstate\n */\nexport function TwitchOwner() {\n\treturn function (\n\t\ttarget: any,\n\t\tpropertyKey: string,\n\t\tdescriptor: PropertyDescriptor,\n\t) {\n\t\tconst OGFunc = descriptor.value;\n\n\t\t//temporary annoyance, since idk how to make type system check this for me\n\t\tconst isResult = function (r: any): r is Result {\n\t\t\tif (r == undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Read the fucking manual: your function must return a result',\n\t\t\t\t);\n\t\t\t} else if (!r.hasOwnProperty('ok') || !r.hasOwnProperty('err')) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Read the fucking manual: your function must return a result',\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tdescriptor.value = function (\n\t\t\tchannel: string,\n\t\t\tuserstate: Userstate,\n\t\t\t...args: any[]\n\t\t): Result {\n\t\t\t//typesystem doesnt catch incorrect usage of the decorator\n\t\t\t//so here is some helpfull error messages for yall who didnt RTFM\n\t\t\tif (channel == undefined || typeof channel != 'string') {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Read the fucking manual: your functions first parameter has to be a channel',\n\t\t\t\t);\n\t\t\t} else if (userstate == undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Read the fucking manual: your functions second parameter has to be a Userstate',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (isOwner(channel, userstate)) {\n\t\t\t\tconst hopefullyAResult = OGFunc(channel, userstate, ...args);\n\t\t\t\t//temporary annoyance, since idk how to make type system check this for me\n\t\t\t\tif (isResult(hopefullyAResult)) {\n\t\t\t\t\treturn hopefullyAResult;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn Err(new UnauthorizedError());\n\t\t\t}\n\t\t};\n\t};\n}\n\n//ERRORS\nexport class UnauthorizedError extends Error {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.name = 'unauthorized error';\n\t\tthis.message = 'user is not authorized';\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInfoCommandDto.html":{"url":"classes/UpdateInfoCommandDto.html","title":"class - UpdateInfoCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInfoCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/info-command/dto/update-info-command.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateInfoCommandDto } from './create-info-command.dto';\n\nexport class UpdateInfoCommandDto extends PartialType(CreateInfoCommandDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WrongAmountOfArgsError.html":{"url":"classes/WrongAmountOfArgsError.html","title":"class - WrongAmountOfArgsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WrongAmountOfArgsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twitch-bot/shared/errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in src/twitch-bot/shared/errors.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WrongAmountOfArgsError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper();\n\t\tthis.name = 'WrongAmountOfArgsError';\n\t\tthis.message = message ? message : 'more or less arguments are needed';\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-command/dto/create-info-command.dto.ts\n            \n            class\n            CreateInfoCommandDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/info-command/dto/read-info-command.dto.ts\n            \n            class\n            ReadInfoCommandDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-command/dto/update-info-command.dto.ts\n            \n            class\n            UpdateInfoCommandDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-command/entities/info-command.entity.ts\n            \n            class\n            InfoCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-command/info-command.controller.ts\n            \n            controller\n            InfoCommandController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/info-command/info-command.service.ts\n            \n            injectable\n            InfoCommandService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/info-command/schemas/info-command.schema.ts\n            \n            class\n            InfoCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/info-command/schemas/info-command.schema.ts\n            \n            variable\n            InfoCommandSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info-command/twitch/twitch.service.ts\n            \n            class\n            TwitchService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/auth.ts\n            \n            class\n            UnauthorizedError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/twitch-bot/auth.ts\n            \n            function\n            isOwner\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/auth.ts\n            \n            function\n            TwitchOwner\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/cmd-handler.ts\n            \n            class\n            CmdHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/twitch-bot/info-command/info-command.ts\n            \n            class\n            TwitchInfoCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/twitch-bot/info-command/info-command.ts\n            \n            class\n            TwitchTest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/twitch-bot/info-command/info-command.ts\n            \n            function\n            t\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/errors.ts\n            \n            class\n            WrongAmountOfArgsError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/interfaces/client.ts\n            \n            interface\n            IClient\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/interfaces/string.ts\n            \n            interface\n            IToString\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/twitchClientSingleton.ts\n            \n            class\n            TSC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/twitchClientSingleton.ts\n            \n            variable\n            opts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/utilities/args.ts\n            \n            function\n            extractCommandArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/utilities/http.ts\n            \n            function\n            correctStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/utilities/http.ts\n            \n            function\n            fetchJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/twitch-bot/shared/utilities/time.ts\n            \n            function\n            minToMilliSecs\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.13\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/mapped-types : ^0.4.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/platform-fastify : ^7.6.14\n        \n            @nestjs/swagger : ^4.7.16\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^8.2.0\n        \n            fastify-swagger : ^4.4.2\n        \n            joi : ^17.4.0\n        \n            mongoose : ^5.12.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            tmi.js : ^1.7.5\n        \n            ts-results : ^3.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            correctStatus   (src/.../http.ts)\n                        \n                        \n                            extractCommandArgs   (src/.../args.ts)\n                        \n                        \n                            fetchJson   (src/.../http.ts)\n                        \n                        \n                            isOwner   (src/.../auth.ts)\n                        \n                        \n                            minToMilliSecs   (src/.../time.ts)\n                        \n                        \n                            t   (src/.../info-command.ts)\n                        \n                        \n                            TwitchOwner   (src/.../auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/twitch-bot/shared/utilities/http.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            correctStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncorrectStatus(r)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Result\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchJson\n                        \n                        \n                    \n                \n            \n            \n                \nfetchJson(url)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/twitch-bot/shared/utilities/args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractCommandArgs\n                        \n                        \n                    \n                \n            \n            \n                \nextractCommandArgs(cmd)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Result\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/twitch-bot/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isOwner\n                        \n                        \n                    \n                \n            \n            \n                \nisOwner(channel, userstate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userstate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            TwitchOwner\n                        \n                        \n                    \n                \n            \n            \n                \nTwitchOwner()\n                \n            \n\n\n\n\n            \n                \n                    Functions using this decorator should return Result,\nbecause atm the type system isnt enforcing that properly.\nAlso it must take at least two parameters in this order\n\n\n                \n            \n        \n    \n    src/twitch-bot/shared/utilities/time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            minToMilliSecs\n                        \n                        \n                    \n                \n            \n            \n                \nminToMilliSecs(min)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/twitch-bot/info-command/info-command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            t\n                        \n                        \n                    \n                \n            \n            \n                \nt()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTwitchy\nThe coolest chat bot there is for your Creator Coins FANS!!!\nDescription\nIt's the coolest, what other reason do i have to give you?\nOh... maybe that you'll potentially increase your cult followers\n9000x, or that there is one feature to kick all the users at once,\nor that we even included a death ray, free of charge ??!?!\nUsage\nCommands\nCommands follow the structure of {command token}{command name} [...args]\nwhere {} means required, and [] are optional arguments.\nDouble quotes will be noted when required.\nExample:\nCommand: createAutoMsg \"{message}\" {update cycle in minutes}\n    !createAutoMsg \"i print every 10 minutes\" 10Anything with quotes, eg \"\", are strings and must be written inside those. Everything\nelse is numbers with different values, like minutes, coins, etc.\nCommand: !coinPrice [coin symbol]\n    !coinPrice    !coinPrice MyCoin Contributing\nConventions i'll defeand to my death\nThe best code is that which optimizes for productivity, readability,\nstability and speed.\nts-results\nTo increase stability, and code production, we use ts-results; a\nlibrary inspired by rusts results library.\nIt is great to increase the readability and understanding of\nfunction signatures. We mainly use this instead of throwing errors\nat people.\n//DONT\nfunction badFunc():number{\n    if(1+1 != 3){\n        throw new Error(\"im dumb\")\n    }\n}\n//DO\nfunction goodFunc():Result{\n    if(1+1 == 2){\n        return Ok(2)\n    }else{\n        return Err(new Error(\"smarty pants\"))\n    }\n}\nImagine, you didnt have to go read a giant function, or\nboring documentation, to make sure the dope of a JS function\nyou about to use wont throw feacies (errors for monoglots) at \nyou like a lab monkey. Thats why you use ts-results, or gtfo.\nDEPRECATED? - Splitting lines\nThe ,\nWhen you split lines the split lines should start with , instead\nof end with , .\nexample:\n//not like this\nconst o={\n    x:1,\n    y:2,\n    z:3\n}\n//like this\nconst o={\n    x:1\n    ,y:2\n    ,z:3\n}It allows for a faster editing of those lines.\nIm dead serious about this convention. When splitting lines, split thously or i'll split your head.\n(PS: this is the haskell way, so at least i got the mathematicians on my lazy ass side)\nDEPRECATED? - Chaining functions (about ;)\nTLDR; Indent, and end chain with ;\nexample:\n//DONT\nx()\n.y()\n.z()\n//DO\nx()\n    .y()\n    .z();Long, dont read:\nWhen chaining functions , to end the sequence, this is to avoid\ntypescript from tripping over itself. Otherwise, referering back to\nthe policy of PRSS (productivity, readability, stability, speed), we\ndont end lines with ; , because its not strictly needed, and saves us\n1 keystroke. In terms of optimization, it runs slightly faster with ;,\nbut the typescript compiler handle that.\nAuto Formatting\nWe use prettifier\nTests\nSetup\nMocks\nchannel\nchannels nammes must be lowercase and start with #.\nexample:\n#iamacorrectlynamedchannelExpect\nShould be written so that on unsuccesfull tests the error\nmessage is printed by jest.\nexample:\n//this\nconst cmdRes:Result = function()\nexpect(cmdRes).toBe(Ok.EMPTY)\n//prints\n/*\n    ErrImpl {\n      \"err\": true,\n      \"ok\": false,\n      \"val\": [unauthorized error: user is not authorized],\n*/It prints like that on error because its comparing the whole structure,\nwhich then includes the error in val.\nDont do this:\nconst cmdRes:Result = function()\nexpect(cmdRes.ok).toBe(true)it will only print that it expected true, but got false. Which\nisnt helpful to understand what error occured.\nDevelopment\nTesting\nWe use the Jest framework, because its very handy and is suggested\nfor NestJs.\nHelpful Resources\ntesting examples\nmakes it easier to mock\nRunning tests\n    npm test\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoCommandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_InfoCommandModule\n\n\n\ncluster_InfoCommandModule_providers\n\n\n\n\nInfoCommandModule\n\nInfoCommandModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nInfoCommandModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nInfoCommandService\n\nInfoCommandService\n\nInfoCommandModule -->\n\nInfoCommandService->InfoCommandModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InfoCommandDoc   (src/.../info-command.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/info-command/schemas/info-command.schema.ts\n    \n    \n        \n            \n                \n                    \n                    InfoCommandDoc\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InfoCommandSchema   (src/.../info-command.schema.ts)\n                        \n                        \n                            opts   (src/.../twitchClientSingleton.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/info-command/schemas/info-command.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InfoCommandSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(InfoCommand)\n                        \n                    \n\n\n            \n        \n\n    src/twitch-bot/shared/twitchClientSingleton.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\toptions: { debug: true, messagesLogLevel: 'info' },\n\tidentity: {\n\t\tusername: 'DaRockeCat',\n\t\tpassword: process.env.OAUTH,\n\t},\n\tchannels: ['darockecat'],\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
